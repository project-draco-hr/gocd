{
  File addonsDirectory=createInAddonDir("some-addon-dir");
  FileSystemUtils.createFile("addon-1.JAR",addonsDirectory);
  FileSystemUtils.createFile("addon-2.jar",addonsDirectory);
  FileSystemUtils.createFile("addon-3.jAR",addonsDirectory);
  FileSystemUtils.createFile("some-file-which-does-not-end-with-dot-jar.txt",addonsDirectory);
  File oneAddonDirectory=createInAddonDir("one-addon-dir");
  FileSystemUtils.createFile("addon-1.jar",oneAddonDirectory);
  File noAddonDirectory=createInAddonDir("no-addon-dir");
  SystemEnvironment systemEnvironment=setAddonsPathTo(addonsDirectory);
  when(systemEnvironment.getCruiseWar()).thenReturn("webapp");
  Jetty9Server serverWithMultipleAddons=new Jetty9Server(systemEnvironment,null,mock(SSLSocketFactory.class));
  serverWithMultipleAddons.configure();
  assertExtraClasspath(getWebAppContext(serverWithMultipleAddons),"test-addons/some-addon-dir/addon-1.JAR","test-addons/some-addon-dir/addon-2.jar","test-addons/some-addon-dir/addon-3.jAR");
  systemEnvironment=setJRubyJarsTo(setAddonsPathTo(oneAddonDirectory));
  when(systemEnvironment.getCruiseWar()).thenReturn("webapp");
  Jetty9Server serverWithOneAddon=new Jetty9Server(systemEnvironment,null,mock(SSLSocketFactory.class));
  assertExtraClasspath(getWebAppContext(serverWithOneAddon),"test-addons/one-addon-dir/addon-1.jar");
  systemEnvironment=setJRubyJarsTo(setAddonsPathTo(noAddonDirectory));
  when(systemEnvironment.getCruiseWar()).thenReturn("webapp");
  Jetty9Server serverWithNoAddon=new Jetty9Server(systemEnvironment,null,mock(SSLSocketFactory.class));
  assertThat(getWebAppContext(serverWithNoAddon).getExtraClasspath(),is(""));
  systemEnvironment=setJRubyJarsTo(setAddonsPathTo(new File("non-existent-directory")));
  when(systemEnvironment.getCruiseWar()).thenReturn("webapp");
  Jetty9Server serverWithInaccessibleAddonDir=new Jetty9Server(systemEnvironment,null,mock(SSLSocketFactory.class));
  assertThat(getWebAppContext(serverWithInaccessibleAddonDir).getExtraClasspath(),is(""));
}
