{
  Context context=metricsProbeService.begin(ProbeType.SAVE_CONFIG_XML_THROUGH_SERVER_CONFIGURATION_TAB);
  try {
    if (!mailHost.equals(new MailHost(new GoCipher()))) {
      validate(mailHost,result);
    }
    if (shouldAllowAutoLogin == false && !userService.canUserTurnOffAutoLogin()) {
      result.notAcceptable(LocalizedMessage.string("CANNOT_TURN_OFF_AUTO_LOGIN"));
      return;
    }
    if (result.isSuccessful()) {
      try {
        ConfigSaveState configSaveState=goConfigService.updateServerConfig(mailHost,ldapConfig,passwordFileConfig,shouldAllowAutoLogin,md5,artifactsDir,purgeStart,purgeUpto,jobTimeout,siteUrl,secureSiteUrl,taskRepositoryLocation);
        if (ConfigSaveState.MERGED.equals(configSaveState)) {
          result.setMessage(LocalizedMessage.composite(LocalizedMessage.string("SAVED_CONFIGURATION_SUCCESSFULLY"),LocalizedMessage.string("CONFIG_MERGED")));
        }
 else         if (ConfigSaveState.UPDATED.equals(configSaveState)) {
          result.setMessage(LocalizedMessage.string("SAVED_CONFIGURATION_SUCCESSFULLY"));
        }
      }
 catch (      RuntimeException exception) {
        updateFailed(exception.getMessage(),result);
      }
    }
  }
  finally {
    metricsProbeService.end(ProbeType.SAVE_CONFIG_XML_THROUGH_SERVER_CONFIGURATION_TAB,context);
  }
}
