{
  Boolean finalResult=true;
  LOGGER.info("Tests start now!");
  final ArrayList<Thread> threads=new ArrayList<>();
  for (int i=0; i < numberOfRequests; i++) {
    Thread t=new Thread(runnable,"pipeline" + i);
    threads.add(t);
  }
  for (  Thread t : threads) {
    Thread.sleep(1000 * (new Random().nextInt(3) + 1));
    t.setUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
      public void uncaughtException(      Thread t,      Throwable e){
        LOGGER.error("Exception " + e + " from thread "+ t);
        results.put(t.getName(),false);
      }
    }
);
    t.start();
  }
  for (  Thread t : threads) {
    int i=threads.indexOf(t);
    if (i == (numberOfRequests - 1)) {
    }
    t.join();
  }
  for (  String threadId : results.keySet()) {
    finalResult=results.get(threadId) && finalResult;
  }
  assertThat(finalResult,is(true));
}
