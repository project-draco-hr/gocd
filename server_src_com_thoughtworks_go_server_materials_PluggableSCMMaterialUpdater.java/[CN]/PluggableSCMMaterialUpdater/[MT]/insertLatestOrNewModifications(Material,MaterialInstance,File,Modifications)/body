{
  final PluggableSCMMaterialInstance currentMaterialInstance=(PluggableSCMMaterialInstance)materialInstance;
  final PluggableSCMMaterialInstance latestMaterialInstance=(PluggableSCMMaterialInstance)material.createMaterialInstance();
  if (currentMaterialInstance.shouldUpgradeTo(latestMaterialInstance)) {
    transactionTemplate.execute(new TransactionCallback(){
      @Override public Object doInTransaction(      TransactionStatus transactionStatus){
        PluggableSCMMaterialInstance materialInstance=(PluggableSCMMaterialInstance)materialRepository.find(currentMaterialInstance.getId());
        materialInstance.upgradeTo(latestMaterialInstance);
        materialRepository.saveOrUpdate(materialInstance);
        return materialInstance;
      }
    }
);
  }
  scmMaterialUpdater.insertLatestOrNewModifications(material,currentMaterialInstance,folder,list);
}
