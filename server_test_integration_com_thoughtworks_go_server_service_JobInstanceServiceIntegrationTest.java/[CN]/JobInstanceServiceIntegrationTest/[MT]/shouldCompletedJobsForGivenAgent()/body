{
  Long stageB_Id=stageWithId("pipeline-aaa","stage-bbb");
  String agentUuid="special_uuid";
  JobInstance completedJob=completed("job-bbb",JobResult.Passed,new Date(1));
  completedJob.setAgentUuid(agentUuid);
  jobInstanceDao.save(stageB_Id,completedJob);
  JobInstance rescheduledJob=rescheduled("rescheduled",agentUuid);
  jobInstanceDao.save(stageB_Id,rescheduledJob);
  jobInstanceDao.ignore(rescheduledJob);
  Long stageC_Id=stageWithId("pipeline-bbb","stage-ccc");
  JobInstance cancelledJob=cancelled("job3");
  cancelledJob.setAgentUuid(agentUuid);
  jobInstanceDao.save(stageC_Id,cancelledJob);
  JobInstance simpleJob=failed("simpleJob");
  simpleJob.getTransition(JobState.Completed).setStateChangeTime(new DateTime().plusYears(2).toDate());
  simpleJob.setAgentUuid(agentUuid);
  jobInstanceDao.save(stageC_Id,simpleJob);
  List<JobInstance> sortedOnCompleted=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.completed,SortOrder.DESC,1,10).iterator());
  assertThat(sortedOnCompleted.size(),is(4));
  assertThat(sortedOnCompleted.get(0).getName(),is("simpleJob"));
  List<JobInstance> sortedOnCompletedAsc=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.completed,SortOrder.ASC,1,10).iterator());
  assertThat(sortedOnCompletedAsc.size(),is(4));
  assertThat(sortedOnCompletedAsc.get(3).getName(),is("simpleJob"));
  List<JobInstance> sortedOnPipelineName=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.pipeline,SortOrder.ASC,1,10).iterator());
  assertThat(sortedOnPipelineName.size(),is(4));
  assertThat(sortedOnPipelineName.get(0).getIdentifier().getPipelineName(),is("pipeline-aaa"));
  assertThat(sortedOnPipelineName.get(1).getIdentifier().getPipelineName(),is("pipeline-aaa"));
  assertThat(sortedOnPipelineName.get(2).getIdentifier().getPipelineName(),is("pipeline-bbb"));
  List<JobInstance> sortedOnPipelineNameDesc=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.pipeline,SortOrder.DESC,1,10).iterator());
  assertThat(sortedOnPipelineNameDesc.size(),is(4));
  assertThat(sortedOnPipelineNameDesc.get(0).getIdentifier().getPipelineName(),is("pipeline-bbb"));
  assertThat(sortedOnPipelineNameDesc.get(2).getIdentifier().getPipelineName(),is("pipeline-aaa"));
  List<JobInstance> sortedOnStageName=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.stage,SortOrder.ASC,1,10).iterator());
  assertThat(sortedOnStageName.size(),is(4));
  assertThat(sortedOnStageName.get(0).getIdentifier().getStageName(),is("stage-bbb"));
  assertThat(sortedOnStageName.get(2).getIdentifier().getStageName(),is("stage-ccc"));
  List<JobInstance> sortedOnStageNameDesc=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.stage,SortOrder.DESC,1,10).iterator());
  assertThat(sortedOnStageNameDesc.size(),is(4));
  assertThat(sortedOnStageNameDesc.get(0).getIdentifier().getStageName(),is("stage-ccc"));
  assertThat(sortedOnStageNameDesc.get(2).getIdentifier().getStageName(),is("stage-bbb"));
  List<JobInstance> sortedOnResult=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.result,SortOrder.ASC,1,10).iterator());
  assertThat(sortedOnResult.size(),is(4));
  assertThat(sortedOnResult.get(0).getResult(),is(JobResult.Cancelled));
  assertThat(sortedOnResult.get(1).getResult(),is(JobResult.Failed));
  assertThat(sortedOnResult.get(2).getResult(),is(JobResult.Passed));
  assertThat(sortedOnResult.get(3).getResult(),is(JobResult.Unknown));
  List<JobInstance> sortedOnResultDesc=listOf(jobInstanceService.completedJobsOnAgent(agentUuid,JobInstanceService.JobHistoryColumns.result,SortOrder.DESC,1,10).iterator());
  assertThat(sortedOnResultDesc.size(),is(4));
  assertThat(sortedOnResultDesc.get(3).getResult(),is(JobResult.Cancelled));
  assertThat(sortedOnResultDesc.get(2).getResult(),is(JobResult.Failed));
  assertThat(sortedOnResultDesc.get(1).getResult(),is(JobResult.Passed));
  assertThat(sortedOnResultDesc.get(0).getResult(),is(JobResult.Unknown));
}
