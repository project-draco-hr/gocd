{
  String pluginId=pluginDescriptor.id();
  try {
    PluginSettingsConfiguration configuration=null;
    String view=null;
    if (packageAsRepositoryExtension.isPackageRepositoryPlugin(pluginId)) {
      configuration=packageAsRepositoryExtension.getPluginSettingsConfiguration(pluginId);
      view=packageAsRepositoryExtension.getPluginSettingsView(pluginId);
    }
 else     if (scmExtension.isSCMPlugin(pluginId)) {
      configuration=scmExtension.getPluginSettingsConfiguration(pluginId);
      view=scmExtension.getPluginSettingsView(pluginId);
    }
 else     if (taskExtension.isTaskPlugin(pluginId)) {
      configuration=taskExtension.getPluginSettingsConfiguration(pluginId);
      view=taskExtension.getPluginSettingsView(pluginId);
    }
 else     if (notificationExtension.isNotificationPlugin(pluginId)) {
      configuration=notificationExtension.getPluginSettingsConfiguration(pluginId);
      view=notificationExtension.getPluginSettingsView(pluginId);
    }
 else     if (authenticationExtension.isAuthenticationPlugin(pluginId)) {
      configuration=authenticationExtension.getPluginSettingsConfiguration(pluginId);
      view=authenticationExtension.getPluginSettingsView(pluginId);
    }
    if (configuration == null || view == null) {
      throw new RuntimeException("Plugin Settings - Configuration or View cannot be null");
    }
    metadataStore.addMetadataFor(pluginId,configuration,view);
  }
 catch (  Exception e) {
    LOGGER.error(format("Failed to fetch Plugin Settings metadata for plugin : %s",pluginId),e);
  }
}
