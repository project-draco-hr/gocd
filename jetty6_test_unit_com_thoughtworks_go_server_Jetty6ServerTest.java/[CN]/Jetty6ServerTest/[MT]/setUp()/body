{
  server=mock(Server.class);
  container=mock(Container.class);
  when(server.getContainer()).thenReturn(container);
  systemEnvironment=mock(SystemEnvironment.class);
  when(systemEnvironment.getServerPort()).thenReturn(1234);
  when(systemEnvironment.getSslServerPort()).thenReturn(4567);
  when(systemEnvironment.keystore()).thenReturn(temporaryFolder.newFolder());
  when(systemEnvironment.truststore()).thenReturn(temporaryFolder.newFolder());
  when(systemEnvironment.getWebappContextPath()).thenReturn("context");
  when(systemEnvironment.getCruiseWar()).thenReturn("cruise.war");
  when(systemEnvironment.getParentLoaderPriority()).thenReturn(true);
  when(systemEnvironment.useCompressedJs()).thenReturn(true);
  when(systemEnvironment.useNioSslSocket()).thenReturn(true);
  when(systemEnvironment.getListenHost()).thenReturn("localhost");
  when(systemEnvironment.getParentLoaderPriority()).thenReturn(false);
  when(systemEnvironment.get(SystemEnvironment.RESPONSE_BUFFER_SIZE)).thenReturn(1000);
  when(systemEnvironment.get(SystemEnvironment.IDLE_TIMEOUT)).thenReturn(2000);
  when(systemEnvironment.getJettyConfigFile()).thenReturn(new File("foo"));
  sslSocketFactory=mock(SSLSocketFactory.class);
  when(sslSocketFactory.getSupportedCipherSuites()).thenReturn(new String[]{});
  goJetty6CipherSuite=mock(GoJetty6CipherSuite.class);
  when(goJetty6CipherSuite.getExcludedCipherSuites()).thenReturn(new String[]{"CS1","CS2"});
  configuration=mock(Jetty6GoWebXmlConfiguration.class);
  jetty6Server=new Jetty6Server(systemEnvironment,"pwd",sslSocketFactory,server,goJetty6CipherSuite,configuration);
}
