{
  DateTime now=new DateTime();
  when(timeProvider.currentTimeMillis()).thenReturn(now.getMillis());
  JobIdentifier job=new JobIdentifier("foo",12,"foo-10","stage","2","job",20l);
  listener.jobStatusChanged(buildingInstance(job));
  when(timeProvider.currentTimeMillis()).thenReturn(now.plusMinutes(2).plusSeconds(1).getMillis());
  consoleActivityMonitor.cancelUnresponsiveJobs(scheduleService);
  verify(serverHealthService).update(ServerHealthState.warning("Job 'foo/stage/job' is not responding","Job <a href='/go/tab/build/detail/foo/12/stage/2/job'>foo/stage/job</a> is currently running but has not shown any console activity in the last 2 minute(s). This job may be hung.",HealthStateType.general(HealthStateScope.forJob("foo","stage","job"))));
  when(timeProvider.currentTimeMillis()).thenReturn(now.plusMinutes(4).plusSeconds(1).getMillis());
  consoleActivityMonitor.cancelUnresponsiveJobs(scheduleService);
  verify(serverHealthService).update(ServerHealthState.warning("Job 'foo/stage/job' is not responding","Job <a href='/go/tab/build/detail/foo/12/stage/2/job'>foo/stage/job</a> is currently running but has not shown any console activity in the last 4 minute(s). This job may be hung.",HealthStateType.general(HealthStateScope.forJob("foo","stage","job"))));
  when(goConfigService.getUnresponsiveJobTerminationThreshold(any(JobIdentifier.class))).thenReturn(360 * 60 * 1000L);
  when(timeProvider.currentTimeMillis()).thenReturn(now.plusHours(1).plusMinutes(2).plusSeconds(1).getMillis());
  consoleActivityMonitor.cancelUnresponsiveJobs(scheduleService);
  verify(serverHealthService).update(ServerHealthState.warning("Job 'foo/stage/job' is not responding","Job <a href='/go/tab/build/detail/foo/12/stage/2/job'>foo/stage/job</a> is currently running but has not shown any console activity in the last 62 minute(s). This job may be hung.",HealthStateType.general(HealthStateScope.forJob("foo","stage","job"))));
}
