{
  GoConfigHolder fileHolder=cachedFileGoConfig.loadConfigHolder();
  MergedGoConfig mergedGoConfig=(MergedGoConfig)this.cachedGoConfig;
  PartialConfig part1=new PartialConfig(new PipelineGroups(PipelineConfigMother.createGroup("part1",PipelineConfigMother.pipelineConfig("pipe1"))));
  mergedGoConfig.tryAssembleMergedConfig(fileHolder,Arrays.asList(part1));
  assertThat("configHolderHasRemotePartsOfConfigInConfig",mergedGoConfig.loadConfigHolder().config.hasPipelineNamed(new CaseInsensitiveString("pipe1")),is(true));
  assertThat("configHolderHasRemotePartsOfConfigInConfigForEdit",mergedGoConfig.loadConfigHolder().configForEdit.hasPipelineNamed(new CaseInsensitiveString("pipe1")),is(true));
  assertThat("currentConfigHasRemotePartsOfConfig",mergedGoConfig.currentConfig().hasPipelineNamed(new CaseInsensitiveString("pipe1")),is(true));
  assertThat("currentConfigForEditHasRemotePartsOfConfig",mergedGoConfig.loadForEditing().hasPipelineNamed(new CaseInsensitiveString("pipe1")),is(true));
  assertThat("configHolderHasLocalPartsOfConfigInConfig",mergedGoConfig.loadConfigHolder().config.getConfigRepos().size(),is(1));
  assertThat("configHolderHasLocalPartsOfConfigInConfigForEdit",mergedGoConfig.loadConfigHolder().configForEdit.getConfigRepos().size(),is(1));
  assertThat("currentConfigHasLocalPartsOfConfig",mergedGoConfig.currentConfig().getConfigRepos().size(),is(1));
  assertThat("currentConfigForEditHasLocalPartsOfConfig",mergedGoConfig.loadForEditing().getConfigRepos().size(),is(1));
}
