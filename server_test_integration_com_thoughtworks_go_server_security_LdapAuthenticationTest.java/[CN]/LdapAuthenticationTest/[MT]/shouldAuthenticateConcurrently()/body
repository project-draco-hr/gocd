{
  ldapServer.addUser(employeesOrgUnit,"foleys","some-password","Shilpa Foley","foleys@somecompany.com");
  ExecutorService pool=Executors.newFixedThreadPool(100);
  List<Callable<String>> allCallables=new ArrayList<Callable<String>>();
  for (int i=0; i < 100; i++) {
    final boolean even=i % 2 == 0;
    allCallables.add(new Callable<String>(){
      @Override public String call() throws Exception {
        if (even) {
          assertAuthenticationOfValidAdminUser("foleys","some-password");
        }
 else {
          assertFailedAuthentication("invalid_user","");
        }
        return "";
      }
    }
);
  }
  List<Future<String>> futures=pool.invokeAll(allCallables);
  pool.shutdown();
  boolean finishedWithoutTimeout=pool.awaitTermination(10,TimeUnit.SECONDS);
  assertThat(finishedWithoutTimeout,is(true));
  for (  Future<String> future : futures) {
    future.get();
  }
}
