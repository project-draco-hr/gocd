{
  CruiseConfig configToSave=new BasicCruiseConfig();
  PackageRepository packageRepository=new PackageRepository();
  packageRepository.setId("id");
  packageRepository.setName("name");
  packageRepository.setPluginConfiguration(new PluginConfiguration("plugin-id","version"));
  packageRepository.setConfiguration(new Configuration(getConfigurationProperty("url",false,"http://go"),getConfigurationProperty("secure",true,"secure")));
  PackageDefinition packageDefinition=new PackageDefinition("id","name",new Configuration(getConfigurationProperty("name",false,"go-agent")));
  packageDefinition.setRepository(packageRepository);
  packageRepository.getPackages().add(packageDefinition);
  configToSave.getPackageRepositories().add(packageRepository);
  xmlWriter.write(configToSave,output,false);
  GoConfigHolder goConfigHolder=xmlLoader.loadConfigHolder(output.toString());
  PackageRepositories packageRepositories=goConfigHolder.config.getPackageRepositories();
  assertThat(packageRepositories,is(configToSave.getPackageRepositories()));
  assertThat(packageRepositories.get(0).getConfiguration().first().getConfigurationValue().getValue(),is("http://go"));
  assertThat(packageRepositories.get(0).getConfiguration().first().getEncryptedConfigurationValue(),is(nullValue()));
  assertThat(packageRepositories.get(0).getConfiguration().last().getEncryptedValue(),is(new GoCipher().encrypt("secure")));
  assertThat(packageRepositories.get(0).getConfiguration().last().getConfigurationValue(),is(nullValue()));
  assertThat(packageRepositories.get(0).getPackages().get(0),is(packageDefinition));
  assertThat(packageRepositories.get(0).getPackages().get(0).getConfiguration().first().getConfigurationValue().getValue(),is("go-agent"));
  assertThat(packageRepositories.get(0).getPackages().get(0).getConfiguration().first().getEncryptedConfigurationValue(),is(nullValue()));
}
