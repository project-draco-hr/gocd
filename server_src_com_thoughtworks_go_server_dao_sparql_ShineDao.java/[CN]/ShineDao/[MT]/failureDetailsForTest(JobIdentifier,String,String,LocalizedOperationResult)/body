{
  String selectTestCase="PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n" + "PREFIX xunit: <" + XUnitOntology.URI + "> "+ "PREFIX cruise: <"+ GoOntology.URI+ "> "+ "\n"+ "SELECT ?failureMessage ?stackTrace {\n"+ "  ?pipeline cruise:pipelineName "+ s(jobId.getPipelineName())+ " .\n"+ "  ?pipeline cruise:pipelineCounter "+ i(jobId.getPipelineCounter())+ " .\n"+ "  ?pipeline cruise:hasStage ?stage .\n"+ "  ?stage cruise:stageName "+ s(jobId.getStageName())+ " .\n"+ "  ?stage cruise:stageCounter "+ i(jobId.getStageCounter())+ " .\n"+ "  ?stage cruise:hasJob ?job .\n"+ "  ?job cruise:jobName "+ s(jobId.getBuildName())+ " .\n"+ "  ?job xunit:hasTestCase ?testCase .\n"+ "  ?testCase a xunit:TestCase .\n"+ "  ?testCase xunit:testCaseName "+ s(testCaseName)+ " .\n"+ "  ?testCase xunit:testSuiteName  "+ s(suiteName)+ " .\n"+ "  ?testCase xunit:hasFailure ?failure .\n"+ "  ?failure a xunit:Failure .\n"+ "  ?failure xunit:failureMessage ?failureMessage .\n"+ "  ?failure xunit:failureStackTrace ?stackTrace "+ "}";
  try {
    return stagesQuery.select(selectTestCase,Arrays.asList(jobId.getStageIdentifier()),new RdfResultMapper<FailureDetails>(){
      public FailureDetails map(      BoundVariables aRow){
        return new FailureDetails(aRow.getAsString("failureMessage"),aRow.getAsString("stackTrace"));
      }
    }
).get(0);
  }
 catch (  RuntimeException e) {
    LOGGER.error("can not retrieve shine test history!",e);
    result.connectionError(LocalizedMessage.unableToRetrieveFailureResults());
    return FailureDetails.nullFailureDetails();
  }
}
