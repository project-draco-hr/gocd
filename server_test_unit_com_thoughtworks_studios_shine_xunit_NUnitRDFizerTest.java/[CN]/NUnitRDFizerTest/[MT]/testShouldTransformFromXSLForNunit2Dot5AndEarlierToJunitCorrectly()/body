{
  String nunitInputXml="<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>" + "<!--This file represents the results of running a test suite-->" + "<test-results name=\"/home/erik/coding/test/nunittests/Tests.dll\" total=\"4\" failures=\"1\" not-run=\"0\" date=\"2007-07-27\" time=\"11:18:43\">"+ "  <environment nunit-version=\"2.2.8.0\" clr-version=\"2.0.50727.42\" os-version=\"Unix 2.6.18.4\" platform=\"Unix\" cwd=\"/home/erik/coding/test/nunittests\" machine-name=\"akira.ramfelt.se\" user=\"erik\" user-domain=\"akira.ramfelt.se\" />"+ "  <culture-info current-culture=\"sv-SE\" current-uiculture=\"sv-SE\" />"+ "  <test-suite name=\"/home/erik/coding/test/nunittests/Tests.dll\" success=\"False\" time=\"0.404\" asserts=\"0\">"+ "    <results>"+ "      <test-suite name=\"UnitTests\" success=\"False\" time=\"0.393\" asserts=\"0\">"+ "        <results>"+ "          <test-suite name=\"UnitTests.MainClassTest\" success=\"False\" time=\"0.289\" asserts=\"0\">"+ "            <results>"+ "              <test-case name=\"UnitTests.MainClassTest.TestPropertyValue\" executed=\"True\" success=\"True\" time=\"0.146\" asserts=\"1\" />"+ "              <test-case name=\"UnitTests.MainClassTest.TestMethodUpdateValue\" executed=\"True\" success=\"True\" time=\"0.001\" asserts=\"1\" />"+ "              <test-case name=\"UnitTests.MainClassTest.TestFailure\" executed=\"True\" success=\"False\" time=\"0.092\" asserts=\"1\" result=\"Failure\">"+ "                <failure>"+ "                  <message><![CDATA[  Expected failure"+ "  Expected: 30"+ "  But was:  20"+ "]]></message>"+ "                  <stack-trace><![CDATA[  at UnitTests.MainClassTest.TestFailure () [0x00000] "+ "  at <0x00000> <unknown method>"+ "  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[])"+ "  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000] "+ "]]></stack-trace>"+ "                </failure>"+ "              </test-case>"+ "            </results>"+ "          </test-suite>"+ "        </results>"+ "      </test-suite>"+ "    </results>"+ "  </test-suite>"+ "</test-results>";
  String expectedResultantJunitFormat="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<testsuites>" + "<testsuite name=\"UnitTests.MainClassTest\" tests=\"3\" time=\"0.289\" failures=\"1\" errors=\"\" skipped=\"0\">"+ "<testcase classname=\"UnitTests.MainClassTest\" name=\"TestPropertyValue\" time=\"0.146\"/>"+ "<testcase classname=\"UnitTests.MainClassTest\" name=\"TestMethodUpdateValue\" time=\"0.001\"/>"+ "<testcase classname=\"UnitTests.MainClassTest\" name=\"TestFailure\" time=\"0.092\">"+ "<failure message=\"  Expected failure  Expected: 30  But was:  20\">  "+ "at UnitTests.MainClassTest.TestFailure () [0x00000]   at &lt;0x00000&gt; &lt;unknown method&gt;  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[])  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000] "+ "</failure>"+ "</testcase>"+ "</testsuite>"+ "</testsuites>";
  InputStream xsl=getClass().getClassLoader().getResourceAsStream("xunit/nunit-to-junit.xsl");
  TransformerFactory transformerFactory=TransformerFactory.newInstance();
  DocumentSource source=new DocumentSource(new SAXReader().read(new InputSource(new ByteArrayInputStream(nunitInputXml.getBytes("utf-8")))));
  DocumentResult result=new DocumentResult();
  Transformer transformer=transformerFactory.newTransformer(new StreamSource(xsl));
  transformer.transform(source,result);
  assertThat(result.getDocument().asXML(),isIdenticalTo(expectedResultantJunitFormat));
}
