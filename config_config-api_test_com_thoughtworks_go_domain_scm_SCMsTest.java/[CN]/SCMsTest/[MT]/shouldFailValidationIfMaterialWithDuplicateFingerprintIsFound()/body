{
  String pluginId="plugin-id";
  SCMPropertyConfiguration scmConfiguration=new SCMPropertyConfiguration();
  scmConfiguration.add(new SCMProperty("k1"));
  scmConfiguration.add(new SCMProperty("k2").with(REQUIRED,false).with(PART_OF_IDENTITY,false));
  SCMMetadataStore.getInstance().addMetadataFor(pluginId,new SCMConfigurations(scmConfiguration));
  SCM scm1=SCMMother.create("1","scm1",pluginId,"1.0",new Configuration(create("k1",false,"v1")));
  SCM scm2=SCMMother.create("2","scm2",pluginId,"1.0",new Configuration(create("k1",false,"v2")));
  SCM scm3=SCMMother.create("3","scm3",pluginId,"1.0",new Configuration(create("k1",false,"v1")));
  SCM scm4=SCMMother.create("4","scm4",pluginId,"1.0",new Configuration(create("k1",false,"V1")));
  SCM scm5=SCMMother.create("5","scm5",pluginId,"1.0",new Configuration(create("k1",false,"v1"),create("k2",false,"v2")));
  SCMs scms=new SCMs(scm1,scm2,scm3,scm4,scm5);
  scms.validate(null);
  assertThat(scm2.getFingerprint().equals(scm1.getFingerprint()),is(false));
  assertThat(scm3.getFingerprint().equals(scm1.getFingerprint()),is(true));
  assertThat(scm4.getFingerprint().equals(scm1.getFingerprint()),is(false));
  assertThat(scm5.getFingerprint().equals(scm1.getFingerprint()),is(true));
  String expectedErrorMessage="Cannot save SCM, found duplicate SCMs. scm1, scm3, scm5";
  assertThat(scm1.errors().getAllOn(SCM.SCM_ID),is(asList(expectedErrorMessage)));
  assertThat(scm2.errors().getAllOn(SCM.SCM_ID),is(nullValue()));
  assertThat(scm3.errors().getAllOn(SCM.SCM_ID),is(asList(expectedErrorMessage)));
  assertThat(scm4.errors().getAllOn(SCM.SCM_ID),is(nullValue()));
  assertThat(scm5.errors().getAllOn(SCM.SCM_ID),is(asList(expectedErrorMessage)));
}
