{
  StageDao stageDao=mock(StageDao.class);
  JobInstanceService jobInstanceService=new JobInstanceService(mock(JobInstanceDao.class),mock(PropertiesService.class),mock(JobResultTopic.class),mock(JobStatusCache.class),actualTransactionTemplate,transactionSynchronizationManager,null,null,goConfigService,pluginManager,jobStatusListener);
  StageService stageService=new StageService(stageDao,jobInstanceService,mock(StageStatusTopic.class),mock(StageStatusCache.class),mock(SecurityService.class),mock(PipelineDao.class),mock(ChangesetService.class),mock(GoConfigService.class),actualTransactionTemplate,transactionSynchronizationManager,goCache);
  Stage savedStage=StageMother.passedStageInstance("stage","job","pipeline-name");
  when(stageDao.save(any(Pipeline.class),any(Stage.class))).thenReturn(savedStage);
  stageService.addStageStatusListener(stageStatusListener);
  service=new PipelineService(pipelineDao,stageService,mock(PipelineLockService.class),pipelineTimeline,materialRepository,actualTransactionTemplate,systemEnvironment,null,materialConfigConverter);
  Pipeline pipeline=PipelineMother.pipeline("cruise",savedStage);
  when(pipelineDao.save(pipeline)).thenReturn(pipeline);
  when(pipelineTimeline.pipelineBefore(anyLong())).thenReturn(9L);
  when(pipelineTimeline.pipelineAfter(pipeline.getId())).thenReturn(-1L);
  when(materialRepository.findMaterialRevisionsForPipeline(9L)).thenReturn(MaterialRevisions.EMPTY);
  return pipeline;
}
