{
  HgMaterial hg=u.wf(new HgMaterial("hg",null),"folder1");
  String[] hg_revs={"hg1","hg2","hg3"};
  int i=1;
  u.checkinInOrder(hg,u.d(i++),hg_revs);
  ScheduleTestUtil.AddedPipeline up0=u.saveConfigWith("up0",u.m(hg));
  ScheduleTestUtil.AddedPipeline up1=u.saveConfigWith("up1",u.m(up0),u.m(hg));
  ScheduleTestUtil.AddedPipeline current=u.saveConfigWith("current",u.m(up1),u.m(hg));
  String up0_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(up0,u.d(i++),"hg1");
  String up0_2=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(up0,u.d(i++),"hg2");
  String up0_3=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(up0,u.d(i++),"hg3");
  String up1_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(up1,u.d(i),up0_2,"hg2");
  MaterialRevisions given=u.mrs(u.mr(hg,true,"hg3"),u.mr(up1,true,up1_1));
  MaterialRevisions expected=u.mrs(u.mr(hg,true,"hg2"),u.mr(up1,true,up1_1));
  MaterialRevisions revisions=getRevisionsBasedOnDependencies(goConfigDao.load(),given,new CaseInsensitiveString("current"));
  assertThat(revisions,is(expected));
}
