{
  GitMaterial git=u.wf(new GitMaterial("git"),"folder1");
  String[] git_revs={"g1","g2","g3","g4"};
  int i=1;
  u.checkinInOrder(git,u.d(i++),git_revs);
  ScheduleTestUtil.AddedPipeline p1=u.saveConfigWith("P1",u.m(git));
  ScheduleTestUtil.AddedPipeline p2=u.saveConfigWith("P2",u.m(git));
  ScheduleTestUtil.AddedPipeline p3=u.saveConfigWith("P3",u.m(git));
  ScheduleTestUtil.AddedPipeline p4=u.saveConfigWith("P4",u.m(p2),u.m(p1),u.m(p3));
  CruiseConfig cruiseConfig=goConfigDao.load();
  String p1_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g1");
  String p1_2=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g2","g3");
  String p1_3=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g4");
  String p1_4=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g2");
  String p1_5=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g4");
  String p2_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p2,u.d(i++),"g1");
  String p2_2=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p2,u.d(i++),"g2");
  String p2_3=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p2,u.d(i++),"g3");
  String p2_4=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p2,u.d(i++),"g4");
  String p2_5=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p2,u.d(i++),"g2");
  String p3_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p3,u.d(i++),"g1");
  String p3_2=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p3,u.d(i++),"g2");
  String p3_3=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p3,u.d(i++),"g3");
  String p3_4=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p3,u.d(i++),"g3");
  String p3_5=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p3,u.d(i++),"g4");
  MaterialRevisions given=u.mrs(u.mr(p2,true,p2_5),u.mr(p1,true,p1_5),u.mr(p3,false,p3_5));
  MaterialRevisions expected=u.mrs(u.mr(p2,true,p2_5),u.mr(p1,false,p1_4),u.mr(p3,false,p3_2));
  MaterialRevisions finalRevisions=getRevisionsBasedOnDependencies(p4,cruiseConfig,given);
  assertThat(finalRevisions,is(expected));
}
