{
  if (LOGGER.isDebugEnabled()) {
    LOGGER.debug(String.format("[Agent Registration] Using URL %s to register.",serverUrl));
  }
  HttpRequestBase postMethod=(HttpRequestBase)RequestBuilder.post(serverUrl).addParameter("hostname",agentHostName).addParameter("uuid",agentRegistry.uuid()).addParameter("location",SystemUtil.currentWorkingDirectory()).addParameter("usablespace",String.valueOf(AgentRuntimeInfo.usableSpace(SystemUtil.currentWorkingDirectory()))).addParameter("operatingSystem",new SystemEnvironment().getOperatingSystemName()).addParameter("agentAutoRegisterKey",agentAutoRegisterProperties.agentAutoRegisterKey()).addParameter("agentAutoRegisterResources",agentAutoRegisterProperties.agentAutoRegisterResources()).addParameter("agentAutoRegisterEnvironments",agentAutoRegisterProperties.agentAutoRegisterEnvironments()).addParameter("agentAutoRegisterHostname",agentAutoRegisterProperties.agentAutoRegisterHostname()).addParameter("elasticAgentId",agentAutoRegisterProperties.agentAutoRegisterElasticAgentId()).addParameter("elasticPluginId",agentAutoRegisterProperties.agentAutoRegisterElasticPluginId()).build();
  try {
    CloseableHttpResponse response=httpClient.execute(postMethod);
    try (InputStream is=response.getEntity() == null ? new NullInputStream(0) : response.getEntity().getContent()){
      return readResponse(is);
    }
   }
  finally {
    postMethod.releaseConnection();
  }
}
