{
  String expectedRequestBody="{\"repository-configuration\":{\"key-one\":{\"value\":\"value-one\"},\"key-two\":{\"value\":\"value-two\"}}," + "\"package-configuration\":{\"key-three\":{\"value\":\"value-three\"},\"key-four\":{\"value\":\"value-four\"}}," + "\"previous-revision\":{\"revision\":\"abc.rpm\",\"timestamp\":\"2011-07-13T19:43:37.100Z\",\"data\":{\"dataKeyOne\":\"data-value-one\",\"dataKeyTwo\":\"data-value-two\"}}}";
  String expectedResponseBody="{\"revision\":\"abc.rpm\",\"timestamp\":\"2011-07-14T19:43:37.100Z\",\"user\":\"some-user\",\"revisionComment\":\"comment\"," + "\"trackbackUrl\":\"http:\\\\localhost:9999\",\"data\":{\"dataKeyOne\":\"data-value-one\",\"dataKeyTwo\":\"data-value-two\"}}";
  Date timestamp=new SimpleDateFormat(DATE_FORMAT).parse("2011-07-13T19:43:37.100Z");
  Map data=new LinkedHashMap();
  data.put("dataKeyOne","data-value-one");
  data.put("dataKeyTwo","data-value-two");
  PackageRevision previouslyKnownRevision=new PackageRevision("abc.rpm",timestamp,"someuser","comment",null,data);
  when(pluginManager.isPluginOfType(JsonBasedPackageRepositoryExtension.EXTENSION_NAME,PLUGIN_ID)).thenReturn(true);
  when(pluginManager.submitTo(eq(PLUGIN_ID),requestArgumentCaptor.capture())).thenReturn(DefaultGoPluginApiResponse.success(expectedResponseBody));
  PackageRevision packageRevision=jsonBasedPackageRepositoryExtension.latestModificationSince(PLUGIN_ID,packageConfiguration,repositoryConfiguration,previouslyKnownRevision);
  assertRequest(requestArgumentCaptor.getValue(),EXTENSION_NAME,"1.0",JsonBasedPackageRepositoryExtension.REQUEST_LATEST_REVISION_SINCE,expectedRequestBody);
  assertPackageRevision(packageRevision,"abc.rpm","some-user","2011-07-14T19:43:37.100Z","comment","http:\\localhost:9999");
}
