{
  try {
    Result result=new Result();
    Map map;
    try {
      map=(Map)new GsonBuilder().create().fromJson(responseBody,Object.class);
    }
 catch (    Exception e) {
      throw new RuntimeException("Check connection result should be returned as map, with key represented as string and messages represented as list");
    }
    if (map == null || map.isEmpty()) {
      throw new RuntimeException("Empty response body");
    }
    String status;
    try {
      status=(String)map.get("status");
    }
 catch (    Exception e) {
      throw new RuntimeException("Check connection 'status' should be of type string");
    }
    if (isEmpty(status)) {
      throw new RuntimeException("Check connection 'status' is a required field");
    }
    if ("success".equalsIgnoreCase(status)) {
      result.withSuccessMessages(new ArrayList<String>());
    }
 else {
      result.withErrorMessages(new ArrayList<String>());
    }
    if (map.containsKey("messages") && map.get("messages") != null) {
      List messages=null;
      try {
        messages=(List)map.get("messages");
      }
 catch (      Exception e) {
        throw new RuntimeException("Check connection 'messages' should be of type list of string");
      }
      if (!messages.isEmpty()) {
        for (        Object message : messages) {
          if (!(message instanceof String)) {
            throw new RuntimeException("Check connection 'message' should be of type string");
          }
        }
        if (result.isSuccessful()) {
          result.withSuccessMessages(messages);
        }
 else {
          result.withErrorMessages(messages);
        }
      }
    }
    return result;
  }
 catch (  Exception e) {
    throw new RuntimeException(format("Unable to de-serialize json response. %s",e.getMessage()));
  }
}
