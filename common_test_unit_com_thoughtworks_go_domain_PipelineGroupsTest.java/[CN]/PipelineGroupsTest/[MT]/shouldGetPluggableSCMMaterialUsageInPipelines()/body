{
  PluggableSCMMaterialConfig pluggableSCMMaterialOne=new PluggableSCMMaterialConfig("scm-id-one");
  PluggableSCMMaterialConfig pluggableSCMMaterialTwo=new PluggableSCMMaterialConfig("scm-id-two");
  final PipelineConfig p1=PipelineConfigMother.pipelineConfig("pipeline1",new MaterialConfigs(pluggableSCMMaterialOne,pluggableSCMMaterialTwo),new JobConfigs(new JobConfig(new CaseInsensitiveString("jobName"))));
  final PipelineConfig p2=PipelineConfigMother.pipelineConfig("pipeline2",new MaterialConfigs(pluggableSCMMaterialTwo),new JobConfigs(new JobConfig(new CaseInsensitiveString("jobName"))));
  PipelineGroups groups=new PipelineGroups();
  PipelineConfigs groupOne=new BasicPipelineConfigs(p1);
  PipelineConfigs groupTwo=new BasicPipelineConfigs(p2);
  groups.addAll(asList(groupOne,groupTwo));
  Map<String,List<Pair<PipelineConfig,PipelineConfigs>>> pluggableSCMMaterialUsageInPipelinesOne=groups.getPluggableSCMMaterialUsageInPipelines();
  assertThat(pluggableSCMMaterialUsageInPipelinesOne.get("scm-id-one").size(),is(1));
  assertThat(pluggableSCMMaterialUsageInPipelinesOne.get("scm-id-one"),hasItems(new Pair<PipelineConfig,PipelineConfigs>(p1,groupOne)));
  assertThat(pluggableSCMMaterialUsageInPipelinesOne.get("scm-id-two").size(),is(2));
  assertThat(pluggableSCMMaterialUsageInPipelinesOne.get("scm-id-two"),hasItems(new Pair<PipelineConfig,PipelineConfigs>(p1,groupOne),new Pair<PipelineConfig,PipelineConfigs>(p2,groupTwo)));
  Map<String,List<Pair<PipelineConfig,PipelineConfigs>>> pluggableSCMMaterialUsageInPipelinesTwo=groups.getPluggableSCMMaterialUsageInPipelines();
  assertSame(pluggableSCMMaterialUsageInPipelinesOne,pluggableSCMMaterialUsageInPipelinesTwo);
}
