{
  String failingTestXML="<?xml version='1.0' encoding='UTF-8' ?>" + "<testsuite errors='1' failures='1' hostname='fake-host-name' name='com.example.TheTest' tests='1' time='1.058' timestamp='2009-12-25T00:34:36'>" + "<testcase classname='com.example.TheTest' name='testSomething' time='0.011'>"+ "<failure message='foo' type='junit.framework.AssertionFailedError'>junit.framework.AssertionFailedError: foo"+ "\tat com.example.TheTest.testSomething(TheTest.java:96)"+ "</failure>"+ "</testcase>"+ "</testsuite>";
  AntJUnitReportRDFizer junitRDFizer=new AntJUnitReportRDFizer(new InMemoryTempGraphFactory(),XSLTTransformerRegistry);
  Graph graph=junitRDFizer.importFile("http://job",document(failingTestXML));
  String ask="prefix cruise: <" + GoOntology.URI + "> "+ "PREFIX xunit: <"+ XUnitOntology.URI+ "> "+ "prefix xsd: <http://www.w3.org/2001/XMLSchema#> "+ "ASK WHERE { "+ "<http://job> xunit:hasTestCase _:testCase . "+ "_:testCase a xunit:TestCase . "+ "_:testCase xunit:testSuiteName 'com.example.TheTest'^^xsd:string . "+ "_:testCase xunit:testCaseName 'testSomething'^^xsd:string . "+ "_:testCase xunit:hasFailure _:failure . "+ "_:failure xunit:isError 'false'^^xsd:boolean "+ "}";
  assertAskIsTrue(graph,ask);
}
