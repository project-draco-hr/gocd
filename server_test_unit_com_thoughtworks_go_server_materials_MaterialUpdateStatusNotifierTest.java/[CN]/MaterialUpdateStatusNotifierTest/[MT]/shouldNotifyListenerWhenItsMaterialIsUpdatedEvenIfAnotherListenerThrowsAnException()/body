{
  Material sharedMaterial=new HgMaterial("url",null);
  PipelineConfig pipelineConfig1=new PipelineConfig(new CaseInsensitiveString("config"),new MaterialConfigs());
  pipelineConfig1.addMaterialConfig(sharedMaterial.config());
  PipelineConfig pipelineConfig2=new PipelineConfig(new CaseInsensitiveString("another-config"),new MaterialConfigs());
  pipelineConfig2.addMaterialConfig(sharedMaterial.config());
  MaterialUpdateStatusListener badListener=Mockito.mock(MaterialUpdateStatusListener.class);
  Mockito.doThrow(new RuntimeException("foo")).when(badListener).onMaterialUpdate(new MaterialUpdateSuccessfulMessage(sharedMaterial,123));
  MaterialUpdateStatusListener goodListener=Mockito.mock(MaterialUpdateStatusListener.class);
  when(badListener.isListeningFor(sharedMaterial)).thenReturn(true);
  when(goodListener.isListeningFor(sharedMaterial)).thenReturn(true);
  materialUpdateStatusNotifier.registerListenerFor(pipelineConfig1,badListener);
  materialUpdateStatusNotifier.registerListenerFor(pipelineConfig2,goodListener);
  materialUpdateStatusNotifier.onMessage(new MaterialUpdateSuccessfulMessage(sharedMaterial,123));
  Mockito.verify(badListener).onMaterialUpdate(new MaterialUpdateSuccessfulMessage(sharedMaterial,123));
  Mockito.verify(goodListener).onMaterialUpdate(new MaterialUpdateSuccessfulMessage(sharedMaterial,123));
}
