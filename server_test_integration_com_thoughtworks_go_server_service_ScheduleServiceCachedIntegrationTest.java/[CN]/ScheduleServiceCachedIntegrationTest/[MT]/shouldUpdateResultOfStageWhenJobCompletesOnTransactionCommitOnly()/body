{
  StageService stageService=mock(StageService.class);
  StageDao stageDao=mock(StageDao.class);
  SchedulingPerformanceLogger schedulingPerformanceLogger=mock(SchedulingPerformanceLogger.class);
  ScheduleService service=new ScheduleService(goConfigService,pipelineService,stageService,schedulingChecker,pipelineScheduledTopic,pipelineDao,stageDao,stageOrderService,securityService,pipelineScheduleQueue,jobInstanceService,jobInstanceDao,agentAssignment,environmentConfigService,pipelineLockService,serverHealthService,transactionTemplate,agentService,synchronizationManager,null,null,null,null,schedulingPerformanceLogger);
  Pipeline assigned=preCondition.createPipelineWithFirstStageAssigned();
  Stage stage=assigned.findStage(preCondition.devStage);
  when(stageService.stageById(stage.getId())).thenThrow(new RuntimeException("find fails"));
  try {
    service.updateJobStatus(stage.getFirstJob().getIdentifier(),JobState.Completed);
    fail("should have failed because stage lookup bombed");
  }
 catch (  Exception e) {
  }
  verify(stageDao,never()).clearCachedAllStages(stage.getIdentifier().getPipelineName(),stage.getIdentifier().getPipelineCounter(),stage.getName());
}
