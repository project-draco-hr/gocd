{
  Collection<AgentInstance> values=MapUtil.filterValues(agentInstances,new MapUtil.Predicate<AgentInstance>(){
    public boolean apply(    AgentInstance agentInstance){
      if (!agentInstance.isElastic()) {
        return false;
      }
      ElasticAgentMetadata elasticAgentMetadata=agentInstance.elasticAgentMetadata();
      return elasticAgentMetadata.elasticAgentId().equals(elasticAgentId) && elasticAgentMetadata.elasticPluginId().equals(elasticPluginId);
    }
  }
);
  if (values.size() == 0) {
    return null;
  }
  if (values.size() > 1) {
    Collection<String> uuids=ListUtil.map(values,new ListUtil.Transformer<AgentInstance,String>(){
      @Override public String transform(      AgentInstance input){
        return input.getUuid();
      }
    }
);
    throw new IllegalStateException(String.format("Found multiple agents with the same elastic agent id [%s]",join(uuids)));
  }
  return values.iterator().next();
}
