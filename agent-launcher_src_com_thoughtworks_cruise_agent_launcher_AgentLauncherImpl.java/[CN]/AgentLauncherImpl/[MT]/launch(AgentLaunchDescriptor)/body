{
  Thread shutdownHook=null;
  try {
    LoggingHelper.configureLoggerIfNoneExists("go-agent-launcher.log","go-agent-launcher-log4j.properties");
    int returnValue;
    if (!lockFile.tryLock()) {
      return IRRECOVERABLE_ERROR;
    }
    shutdownHook=registerShutdownHook();
    Map context=descriptor.context();
    AgentBootstrapperBackwardCompatibility backwardCompatibility=backwardCompatibility(context);
    ServerUrlGenerator urlGenerator=backwardCompatibility.getUrlGenerator();
    File rootCertFile=backwardCompatibility.rootCertFile();
    SslVerificationMode sslVerificationMode=backwardCompatibility.sslVerificationMode();
    ServerBinaryDownloader launcherDownloader=new ServerBinaryDownloader(urlGenerator,DownloadableFile.LAUNCHER,rootCertFile,sslVerificationMode);
    if (launcherDownloader.downloadIfNecessary()) {
      return LAUNCHER_NOT_UP_TO_DATE;
    }
    ServerBinaryDownloader agentDownloader=new ServerBinaryDownloader(urlGenerator,DownloadableFile.AGENT,rootCertFile,sslVerificationMode);
    agentDownloader.downloadIfNecessary();
    returnValue=agentProcessParentRunner.run(getLauncherVersion(),launcherDownloader.md5(),urlGenerator,System.getenv(),context);
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      return returnValue;
    }
    return returnValue;
  }
 catch (  Exception e) {
    LOG.error("Launch encountered an unknown exception",e);
    return UNKNOWN_EXCEPTION_OCCURRED;
  }
 finally {
    removeShutDownHook(shutdownHook);
    lockFile.delete();
  }
}
