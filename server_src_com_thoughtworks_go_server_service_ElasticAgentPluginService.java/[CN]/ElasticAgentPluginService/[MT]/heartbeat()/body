{
  LinkedMultiValueMap<String,ElasticAgentMetadata> elasticAgents=agentService.allElasticAgents();
  for (  PluginDescriptor descriptor : elasticAgentPluginRegistry.getPlugins()) {
    serverPingQueue.post(new ServerPingMessage(descriptor.id()));
  }
  if (!elasticAgents.isEmpty()) {
    for (    String pluginId : elasticAgents.keySet()) {
      Collection<String> uuids=ListUtil.map(elasticAgents.get(pluginId),new ListUtil.Transformer<ElasticAgentMetadata,String>(){
        @Override public String transform(        ElasticAgentMetadata input){
          return input.uuid();
        }
      }
);
      LOGGER.warn("Elastic agent plugin with identifier {} has gone missing, but left behind {} agent(s) with UUIDs {}.",pluginId,elasticAgents.get(pluginId).size(),uuids);
    }
  }
}
