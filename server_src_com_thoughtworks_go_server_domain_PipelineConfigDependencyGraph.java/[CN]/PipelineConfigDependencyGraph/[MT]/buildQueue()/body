{
  Queue<PipelineConfigQueueEntry> configQueue=new LinkedList<>();
  Queue<PipelineConfigDependencyEntry> tmp=new LinkedList<>();
  tmp.add(new PipelineConfigDependencyEntry(this,new ArrayList<PipelineConfig>()));
  while (true) {
    PipelineConfigDependencyEntry currentHead=tmp.poll();
    if (currentHead == null) {
      break;
    }
    PipelineConfigDependencyGraph current=currentHead.getNode();
    List<PipelineConfig> currentPath=currentHead.getPath();
    currentPath.add(current.getCurrent());
    configQueue.add(new PipelineConfigQueueEntry(current.getCurrent(),new ArrayList<>(currentPath)));
    for (    PipelineConfigDependencyGraph upstream : current.getUpstreamDependencies()) {
      List<PipelineConfig> parentsPath=new ArrayList<>(currentPath);
      tmp.add(new PipelineConfigDependencyEntry(upstream,parentsPath));
    }
  }
  return removeHead(configQueue);
}
