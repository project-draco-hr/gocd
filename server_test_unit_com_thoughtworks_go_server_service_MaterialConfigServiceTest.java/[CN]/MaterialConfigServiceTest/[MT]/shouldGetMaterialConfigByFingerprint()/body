{
  when(goConfigService.allGroups()).thenReturn(Arrays.asList("group1","group2"));
  String user="looser";
  when(securityService.hasViewPermissionForGroup(user,"group1")).thenReturn(false);
  when(securityService.hasViewPermissionForGroup(user,"group2")).thenReturn(true);
  PipelineConfigs pipelineConfigs=new PipelineConfigs();
  PipelineConfig pipelineConfig=new PipelineConfig();
  GitMaterialConfig gitMaterialConfig1=new GitMaterialConfig("http://test.com");
  GitMaterialConfig getMaterialConfig2=new GitMaterialConfig("http://crap.com");
  String fingerprintForGit2=getMaterialConfig2.getFingerprint();
  pipelineConfig.addMaterialConfig(gitMaterialConfig1);
  pipelineConfig.addMaterialConfig(getMaterialConfig2);
  pipelineConfigs.add(pipelineConfig);
  when(goConfigService.getAllPipelinesInGroup("group2")).thenReturn(pipelineConfigs);
  MaterialConfigService materialConfigService=new MaterialConfigService(goConfigService,securityService);
  HttpOperationResult result=new HttpOperationResult();
  MaterialConfig materialConfig=materialConfigService.getMaterialConfig(user,fingerprintForGit2,result);
  verify(goConfigService,never()).getAllPipelinesInGroup("group1");
  assertThat(materialConfig,is((MaterialConfig)getMaterialConfig2));
  assertThat(result.canContinue(),is(true));
  materialConfig=materialConfigService.getMaterialConfig(user,"unknown-fingerprint",result);
  assertThat(materialConfig,is(nullValue()));
  assertThat(result.httpCode(),is(404));
}
