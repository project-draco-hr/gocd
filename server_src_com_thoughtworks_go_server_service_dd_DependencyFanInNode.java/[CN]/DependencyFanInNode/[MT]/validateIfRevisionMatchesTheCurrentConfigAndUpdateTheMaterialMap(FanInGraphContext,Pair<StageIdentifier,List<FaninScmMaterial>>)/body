{
  final Set<MaterialConfig> currentScmMaterials=context.pipelineScmDepMap.get(materialConfig);
  final Set<FaninScmMaterial> scmMaterials=new HashSet<>(stageIdentifierScmPair.last());
  final Set<String> currentScmFingerprint=new HashSet<>();
  for (  MaterialConfig currentScmMaterial : currentScmMaterials) {
    currentScmFingerprint.add(currentScmMaterial.getFingerprint());
  }
  final Set<String> scmMaterialsFingerprint=new HashSet<>();
  for (  FaninScmMaterial scmMaterial : scmMaterials) {
    scmMaterialsFingerprint.add(scmMaterial.fingerprint);
  }
  final Collection commonMaterials=CollectionUtils.intersection(currentScmFingerprint,scmMaterialsFingerprint);
  if (commonMaterials.size() == scmMaterials.size() && commonMaterials.size() == currentScmMaterials.size()) {
    stageIdentifierScmMaterial.put(stageIdentifierScmPair.first(),scmMaterials);
    ++currentCount;
  }
 else {
    Collection disjunctionWithConfig=CollectionUtils.disjunction(currentScmFingerprint,commonMaterials);
    Collection disjunctionWithInstance=CollectionUtils.disjunction(scmMaterialsFingerprint,commonMaterials);
    LOGGER.warn(String.format("[Fan-in] - Incompatible materials for %s. Config: %s. Instance: %s.",stageIdentifierScmPair.first().getStageLocator(),disjunctionWithConfig,disjunctionWithInstance));
    totalInstanceCount=currentCount;
  }
}
