{
  int exitValue=0;
  String sep=System.getProperty("file.separator");
  String defaultJava=System.getProperty("java.home") + sep + "bin"+ sep+ "java";
  String java=System.getProperty("go.java.to.use",defaultJava);
  String startMem=System.getProperty("cruise.server.mem","512");
  String maxMem=System.getProperty("cruise.server.maxmem","1024");
  String perm=System.getProperty("cruise.server.permgen","128");
  String maxPerm=System.getProperty("cruise.server.maxpermgen","256");
  String lang=System.getProperty("cruise.server.lang","en");
  String country=System.getProperty("cruise.server.country","US");
  boolean dbDebugMode=System.getProperty("cruise.server.db_debug_mode") != null;
  final java.util.List<String> arguments=new ArrayList<String>();
  arguments.add(java);
  arguments.add("-Xms" + startMem + "m");
  arguments.add("-Xmx" + maxMem + "m");
  arguments.add("-XX:PermSize=" + perm + "m");
  arguments.add("-XX:MaxPermSize=" + maxPerm + "m");
  if (dbDebugMode) {
    arguments.add("-DDB_DEBUG_MODE=true");
  }
  arguments.add("-Dapple.awt.UIElement=true");
  arguments.add("-Duser.language=" + lang);
  arguments.add("-Duser.country=" + country);
  arguments.add("-Dcruise.config.file=" + GO_CONFIG_DIRECTORY_PATH + "cruise-config.xml");
  arguments.add("-Dcruise.config.dir=" + GO_CONFIG_DIRECTORY_PATH);
  arguments.add("-Dcruise.server.port=" + System.getProperty("cruise.server.port","8153"));
  arguments.add("-Dcruise.server.ssl.port=" + System.getProperty("cruise.server.ssl.port","8154"));
  addOtherArguments(arguments);
  arguments.add("-jar");
  arguments.add(new File(System.getProperty("go.server.mac.go.jar.dir","."),"go.jar").getAbsolutePath());
  LOG.info("Running server as: " + arguments);
  String[] args=arguments.toArray(new String[arguments.size()]);
  try {
    setUpApplicationSupport();
    ProcessBuilder processBuilder=new ProcessBuilder(args);
    processBuilder.directory(new File(APPLICATION_SUPPORT_PATHNAME));
    processBuilder.redirectErrorStream(true);
    processBuilder.redirectOutput(ProcessBuilder.Redirect.appendTo(new File(APPLICATION_SUPPORT_PATHNAME,"go-server.log")));
    final Process server=processBuilder.start();
    server.getOutputStream().close();
    Thread shutdownHook=new Thread(new Shutdown(server));
    Runtime.getRuntime().addShutdownHook(shutdownHook);
    Thread progressThread=new Thread(new Runnable(){
      public void run(){
        try {
          displayLaunchingProgress(server);
        }
 catch (        InterruptedException e) {
        }
catch (        IOException e) {
          LOG.severe("Exception while executing command: " + arguments + " - "+ e.toString());
        }
      }
    }
);
    progressThread.start();
    try {
      exitValue=server.waitFor();
      if (exitValue != 0) {
        LOG.severe(String.format("Server was terminated with exit code %d.  Please see %sgo-server.log for more details.",exitValue,APPLICATION_SUPPORT_PATHNAME));
        System.exit(1);
      }
    }
 catch (    InterruptedException ie) {
      LOG.severe("Server was interrupted. Terminating. " + ie.toString());
      server.destroy();
    }
    Runtime.getRuntime().removeShutdownHook(shutdownHook);
  }
 catch (  IOException e) {
    LOG.severe("Exception while executing command: " + asList(args) + " - "+ e.toString());
  }
  return exitValue;
}
