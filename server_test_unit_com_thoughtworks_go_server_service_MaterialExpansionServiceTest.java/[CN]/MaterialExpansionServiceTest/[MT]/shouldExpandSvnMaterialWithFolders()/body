{
  SvnMaterialConfig svn=svnMaterialConfig(svnRepo.projectRepositoryUrl(),null);
  SvnMaterialConfig svnExt=svnMaterialConfig(svnRepo.externalRepositoryUrl(),"end2end");
  PipelineConfig pipelineConfig=new PipelineConfig();
  pipelineConfig.addMaterialConfig(svn);
  String cacheKeyForSvn=MaterialExpansionService.class + "_cacheKeyForSvnMaterialCheckExternalCommand_" + svn.getFingerprint();
  String cacheKeyForSvnExt=MaterialExpansionService.class + "_cacheKeyForSvnMaterialCheckExternalCommand_" + svnExt.getFingerprint();
  when(goCache.get(cacheKeyForSvn)).thenReturn(null);
  when(goCache.get(cacheKeyForSvnExt)).thenReturn(null);
  MaterialConfigs materialConfigs=materialExpansionService.expandMaterialConfigsForScheduling(pipelineConfig.materialConfigs());
  assertThat(materialConfigs.size(),is(2));
  assertThat((SvnMaterialConfig)materialConfigs.get(0),is(svn));
  assertThat((SvnMaterialConfig)materialConfigs.get(1),is(svnExt));
  assertThat(materialConfigs.get(1).filter(),is(svn.filter()));
}
