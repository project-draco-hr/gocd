{
  HgMaterialConfig common1=MaterialConfigsMother.hgMaterialConfig("hg-url","one-folder");
  HgMaterialConfig common2=MaterialConfigsMother.hgMaterialConfig("hg-url","another-folder");
  SvnMaterialConfig firstOrderSVNMaterial=MaterialConfigsMother.svnMaterialConfig();
  GitMaterialConfig firstOrderGitMaterial=MaterialConfigsMother.gitMaterialConfig("url","submodule","branch");
  P4MaterialConfig firstOrderP4Material=MaterialConfigsMother.p4MaterialConfig();
  DependencyMaterialConfig up1DependencyMaterial=new DependencyMaterialConfig(new CaseInsensitiveString("up1"),new CaseInsensitiveString("first"));
  DependencyMaterialConfig up2DependencyMaterial=new DependencyMaterialConfig(new CaseInsensitiveString("up2"),new CaseInsensitiveString("first"));
  DependencyMaterialConfig uppestDependencyMaterial=new DependencyMaterialConfig(new CaseInsensitiveString("uppest"),new CaseInsensitiveString("first"));
  PipelineConfig current=GoConfigMother.createPipelineConfigWithMaterialConfig("current",common1,up1DependencyMaterial,up2DependencyMaterial);
  PipelineConfig up1=GoConfigMother.createPipelineConfigWithMaterialConfig("up1",common2,firstOrderGitMaterial,uppestDependencyMaterial);
  PipelineConfig up2=GoConfigMother.createPipelineConfigWithMaterialConfig("up2",firstOrderSVNMaterial,common2,uppestDependencyMaterial);
  PipelineConfig uppest=GoConfigMother.createPipelineConfigWithMaterialConfig("uppest",common1,firstOrderP4Material);
  PipelineConfigDependencyGraph uppestGraph=new PipelineConfigDependencyGraph(uppest);
  PipelineConfigDependencyGraph up1Graph=new PipelineConfigDependencyGraph(up1,uppestGraph);
  PipelineConfigDependencyGraph up2Graph=new PipelineConfigDependencyGraph(up2,uppestGraph);
  PipelineConfigDependencyGraph dependencyGraph=new PipelineConfigDependencyGraph(current,up1Graph,up2Graph);
  assertThat(dependencyGraph.unsharedMaterialConfigs().size(),is(2));
  assertThat(dependencyGraph.unsharedMaterialConfigs().get(0),is((MaterialConfig)up1DependencyMaterial));
  assertThat(dependencyGraph.unsharedMaterialConfigs().get(1),is((MaterialConfig)up2DependencyMaterial));
  assertThat(up1Graph.unsharedMaterialConfigs().size(),is(2));
  assertThat(up1Graph.unsharedMaterialConfigs().get(0),is((MaterialConfig)firstOrderGitMaterial));
  assertThat(up1Graph.unsharedMaterialConfigs().get(1),is((MaterialConfig)uppestDependencyMaterial));
  assertThat(up2Graph.unsharedMaterialConfigs().size(),is(2));
  assertThat(up2Graph.unsharedMaterialConfigs().get(0),is((MaterialConfig)firstOrderSVNMaterial));
  assertThat(up2Graph.unsharedMaterialConfigs().get(1),is((MaterialConfig)uppestDependencyMaterial));
  assertThat(uppestGraph.unsharedMaterialConfigs().size(),is(2));
  assertThat(uppestGraph.unsharedMaterialConfigs().get(0),is((MaterialConfig)common1));
  assertThat(uppestGraph.unsharedMaterialConfigs().get(1),is((MaterialConfig)firstOrderP4Material));
}
