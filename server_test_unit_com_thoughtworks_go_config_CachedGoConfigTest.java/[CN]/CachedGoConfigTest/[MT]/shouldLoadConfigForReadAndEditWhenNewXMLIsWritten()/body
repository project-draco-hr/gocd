{
  cachedGoConfig.onTimer();
  GoConfigValidity configValidity=cachedGoConfig.checkConfigFileValid();
  assertThat(configValidity.isValid(),is(true));
  CruiseConfig cruiseConfig=cachedGoConfig.loadForEditing();
  addPipelineWithParams(cruiseConfig);
  ByteArrayOutputStream buffer=new ByteArrayOutputStream();
  new MagicalGoConfigXmlWriter(new ConfigCache(),ConfigElementImplementationRegistryMother.withNoPlugins(),metricsProbeService).write(cruiseConfig,buffer,false);
  cachedGoConfig.save(new String(buffer.toByteArray()),true);
  PipelineConfig reloadedPipelineConfig=cachedGoConfig.currentConfig().pipelineConfigByName(new CaseInsensitiveString("mingle"));
  HgMaterialConfig hgMaterialConfig=(HgMaterialConfig)byFolder(reloadedPipelineConfig.materialConfigs(),"folder");
  assertThat(hgMaterialConfig.getUrl(),is("http://hg-server/repo-name"));
  reloadedPipelineConfig=cachedGoConfig.loadForEditing().pipelineConfigByName(new CaseInsensitiveString("mingle"));
  hgMaterialConfig=(HgMaterialConfig)byFolder(reloadedPipelineConfig.materialConfigs(),"folder");
  assertThat(hgMaterialConfig.getUrl(),is("http://#{foo}/#{bar}"));
  GoConfigHolder configHolder=cachedGoConfig.loadConfigHolder();
  reloadedPipelineConfig=configHolder.config.pipelineConfigByName(new CaseInsensitiveString("mingle"));
  hgMaterialConfig=(HgMaterialConfig)byFolder(reloadedPipelineConfig.materialConfigs(),"folder");
  assertThat(hgMaterialConfig.getUrl(),is("http://hg-server/repo-name"));
  reloadedPipelineConfig=configHolder.configForEdit.pipelineConfigByName(new CaseInsensitiveString("mingle"));
  hgMaterialConfig=(HgMaterialConfig)byFolder(reloadedPipelineConfig.materialConfigs(),"folder");
  assertThat(hgMaterialConfig.getUrl(),is("http://#{foo}/#{bar}"));
}
