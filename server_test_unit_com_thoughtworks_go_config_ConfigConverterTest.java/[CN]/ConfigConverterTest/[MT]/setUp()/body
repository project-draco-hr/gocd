{
  environmentVariables=new ArrayList<>();
  tabs=new ArrayList<>();
  resources=new ArrayList<>();
  artifacts=new ArrayList<>();
  artifactPropertiesGenerators=new ArrayList<>();
  tasks=new ArrayList<>();
  authorizedRoles=new ArrayList<>();
  authorizedUsers=new ArrayList<>();
  jobs=new ArrayList<>();
  cachedFileGoConfig=mock(CachedFileGoConfig.class);
  goCipher=mock(GoCipher.class);
  configConverter=new ConfigConverter(goCipher,cachedFileGoConfig);
  String encryptedText="secret";
  when(goCipher.decrypt("encryptedvalue")).thenReturn(encryptedText);
  when(goCipher.encrypt("secret")).thenReturn("encryptedvalue");
  filter=new ArrayList<>();
  filter.add("filter");
  environmentVariables.add(new CREnvironmentVariable("key","value"));
  tabs.add(new CRTab("tabname","tabpath"));
  resources.add("resource1");
  artifacts.add(new CRArtifact("src","dest"));
  artifactPropertiesGenerators.add(new CRPropertyGenerator("name","src","path"));
  tasks.add(new CRFetchArtifactTask(CRRunIf.failed,null,"upstream","stage","job","src","dest",false));
  jobs.add(new CRJob("name",environmentVariables,tabs,resources,artifacts,artifactPropertiesGenerators,true,5,120,tasks));
  authorizedUsers.add("authUser");
  authorizedRoles.add("authRole");
}
