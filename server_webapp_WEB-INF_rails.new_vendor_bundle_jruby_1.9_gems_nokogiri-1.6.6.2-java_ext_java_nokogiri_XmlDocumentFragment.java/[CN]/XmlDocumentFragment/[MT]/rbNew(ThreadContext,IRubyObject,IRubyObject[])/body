{
  if (args.length < 1) {
    throw context.getRuntime().newArgumentError(args.length,1);
  }
  if (!(args[0] instanceof XmlDocument)) {
    throw context.getRuntime().newArgumentError("first parameter must be a Nokogiri::XML::Document instance");
  }
  XmlDocument doc=(XmlDocument)args[0];
  if (args.length > 1 && args[1] instanceof RubyString) {
    args[1]=trim(context,doc,(RubyString)args[1]);
    if (XmlDocumentFragment.isTag((RubyString)args[1])) {
      args[1]=RubyString.newString(context.getRuntime(),addNamespaceDeclIfNeeded(doc,rubyStringToString(args[1])));
    }
  }
  XmlDocumentFragment fragment=(XmlDocumentFragment)NokogiriService.XML_DOCUMENT_FRAGMENT_ALLOCATOR.allocate(context.getRuntime(),(RubyClass)cls);
  fragment.setDocument(context,doc);
  fragment.setNode(context,doc.getDocument().createDocumentFragment());
  if (args.length == 3 && args[2] != null && args[2] instanceof XmlElement) {
    fragment.fragmentContext=(XmlElement)args[2];
  }
  RuntimeHelpers.invoke(context,fragment,"initialize",args);
  return fragment;
}
