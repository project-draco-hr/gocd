{
  TimeProvider timeProvider=new TimeProvider(){
    @Override public Date currentTime(){
      return scheduleTime.toDate();
    }
    public DateTime currentDateTime(){
      throw new UnsupportedOperationException("Not implemented");
    }
    public DateTime timeoutTime(    Timeout timeout){
      throw new UnsupportedOperationException("Not implemented");
    }
  }
;
  JobInstance firstJob=new JobInstance(jobName,timeProvider);
  JobInstances jobInstances=new JobInstances(firstJob);
  Stage stage=StageMother.custom(pipelineName,stageName,jobInstances);
  firstJob.assign("AGENT-1",completedTime.toDate());
  firstJob.completing(jobResult,completedTime.toDate());
  firstJob.completed(completedTime.toDate());
  stage.calculateResult();
  stage.setCreatedTime(new Timestamp(timeProvider.currentTime().getTime()));
  stage.setLastTransitionedTime(new Timestamp(completedTime.toDate().getTime()));
  stage.setIdentifier(new StageIdentifier(pipelineName,pipelineCounter,"LABEL-" + pipelineCounter,stageName,String.valueOf(stageCounter)));
  return stage;
}
