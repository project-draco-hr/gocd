{
  MergeResult result=null;
  try {
    checkout(branchName);
    result=git.merge().include(newCommit).call();
  }
 catch (  GitAPIException e) {
    LOGGER.info(String.format("[CONFIG_MERGE] Merging commit %s by user %s to branch %s at revision %s failed",newCommit.getId().getName(),newCommit.getAuthorIdent().getName(),branchName,getCurrentRevCommit().getId().getName()));
    throw e;
  }
  if (!result.getMergeStatus().isSuccessful()) {
    LOGGER.info(String.format("[CONFIG_MERGE] Merging commit %s by user %s to branch %s at revision %s failed as config file has changed",newCommit.getId().getName(),newCommit.getAuthorIdent().getName(),branchName,getCurrentRevCommit().getId().getName()));
    throw new ConfigFileHasChangedException();
  }
  LOGGER.info(String.format("[CONFIG_MERGE] Successfully merged commit %s by user %s to branch %s. Merge commit revision is %s",newCommit.getId().getName(),newCommit.getAuthorIdent().getName(),branchName,getCurrentRevCommit().getId().getName()));
  return FileUtils.readFileToString(new File(workingDir,CRUISE_CONFIG_XML));
}
