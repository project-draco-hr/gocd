{
  if (controller == null) {
    LOG.error("Error handling " + request.getRequestURI(),ex);
    throw bomb(ex);
  }
  Class handlerType=controller.getClass();
class CallBack implements ReflectionUtils.MethodCallback {
    private ModelAndView mov;
    public ModelAndView getReturnValue(){
      return mov;
    }
    public void doWith(    Method method){
      if (method.getAnnotation(ErrorHandler.class) != null && method.getReturnType().equals(ModelAndView.class)) {
        mov=(ModelAndView)ReflectionUtils.invokeMethod(method,controller,new Object[]{request,response,ex});
      }
    }
  }
  CallBack back=new CallBack();
  ReflectionUtils.doWithMethods(handlerType,back);
  if (back.getReturnValue() != null) {
    return back.getReturnValue();
  }
  return super.resolveException(request,response,controller,ex);
}
