{
  String userName="user";
  String comment="comment-1";
  Date checkinDate=new Date(System.currentTimeMillis());
  String revision="revision-1";
  Modification modification=new Modification(userName,comment,null,checkinDate,revision);
  modification.setModifiedFiles(new ArrayList<ModifiedFile>(asList(new ModifiedFile("f1",null,ModifiedAction.added),new ModifiedFile("f2",null,ModifiedAction.deleted))));
  Modifications modifications=new Modifications(modification);
  XmlWriterContext writerContext=mock(XmlWriterContext.class);
  when(writerContext.getBaseUrl()).thenReturn("http://someurl:8153/go");
  Element modificationsTag=DocumentHelper.createDocument().addElement("modifications");
  new PipelineXmlViewModel.ScmXmlViewModel(MaterialsMother.pluggableSCMMaterial()).populateXmlForModifications(modifications,writerContext,modificationsTag);
  Element changeSet=modificationsTag.element("changeset");
  assertThat(changeSet,is(not(IsNull.nullValue())));
  assertThat(changeSet.attributeValue("changesetUri"),is("http://someurl:8153/go/api/materials/1/changeset/revision-1.xml"));
  assertThat(changeSet.element("user").getText(),is(userName));
  assertThat(changeSet.element("revision").getText(),is(revision));
  assertThat(changeSet.element("checkinTime").getText(),is(DateUtils.formatISO8601(checkinDate)));
  assertThat(changeSet.element("message").getText(),is(comment));
  Element file1=(Element)changeSet.elements("file").get(0);
  assertThat(file1.attributeValue("name"),is("f1"));
  assertThat(file1.attributeValue("action"),is("added"));
  Element file2=(Element)changeSet.elements("file").get(1);
  assertThat(file2.attributeValue("name"),is("f2"));
  assertThat(file2.attributeValue("action"),is("deleted"));
}
