{
  PipelineConfig pipelineConfig=mock(PipelineConfig.class);
  CaseInsensitiveString p1=new CaseInsensitiveString("p1");
  when(pipelineConfig.name()).thenReturn(p1);
  CcTrayConfigChangeHandler ccTrayConfigChangeHandler=mock(CcTrayConfigChangeHandler.class);
  ArgumentCaptor<ConfigChangedListener> captor=ArgumentCaptor.forClass(ConfigChangedListener.class);
  doNothing().when(goConfigService).register(captor.capture());
  when(goConfigService.findGroupNameByPipeline(p1)).thenReturn("group1");
  CcTrayActivityListener listener=new CcTrayActivityListener(goConfigService,mock(CcTrayJobStatusChangeHandler.class),mock(CcTrayStageStatusChangeHandler.class),ccTrayConfigChangeHandler);
  listener.initialize();
  List<ConfigChangedListener> listeners=captor.getAllValues();
  assertThat(listeners.get(1) instanceof EntityConfigChangedListener,is(true));
  EntityConfigChangedListener<PipelineConfig> pipelineConfigChangeListener=(EntityConfigChangedListener<PipelineConfig>)listeners.get(1);
  pipelineConfigChangeListener.onEntityConfigChange(pipelineConfig);
  waitForProcessingToHappen();
  verify(ccTrayConfigChangeHandler).call(pipelineConfig,"group1");
}
