{
  if (node instanceof Element) {
    clearCachedNode(node);
    Element e=(Element)node;
    String prefix=e.getPrefix();
    String currentNS=e.getNamespaceURI();
    if (prefix == null && currentNS == null) {
      prefix=NokogiriHelpers.getPrefix(e.getNodeName());
    }
 else     if (currentNS != null) {
      prefix=e.lookupPrefix(currentNS);
    }
    e.getOwnerDocument().setStrictErrorChecking(false);
    String nsURI=e.lookupNamespaceURI(prefix);
    this.node=NokogiriHelpers.renameNode(e,nsURI,e.getNodeName());
    if (e.hasAttributes()) {
      NamedNodeMap attrs=e.getAttributes();
      for (int i=0; i < attrs.getLength(); i++) {
        Attr attr=(Attr)attrs.item(i);
        String nsUri="";
        String attrPrefix=attr.getPrefix();
        if (attrPrefix == null) {
          attrPrefix=NokogiriHelpers.getPrefix(attr.getNodeName());
        }
        String nodeName=attr.getNodeName();
        if ("xml".equals(attrPrefix)) {
          nsUri="http://www.w3.org/XML/1998/namespace";
        }
 else         if ("xmlns".equals(attrPrefix) || nodeName.equals("xmlns")) {
          nsUri="http://www.w3.org/2000/xmlns/";
        }
 else {
          nsUri=attr.lookupNamespaceURI(attrPrefix);
        }
        if (nsUri == e.getNamespaceURI()) {
          nsUri=null;
        }
        if (!(nsUri == null || "".equals(nsUri) || "http://www.w3.org/XML/1998/namespace".equals(nsUri))) {
          XmlNamespace.createFromAttr(context.getRuntime(),attr);
        }
        clearCachedNode(attr);
        NokogiriHelpers.renameNode(attr,nsUri,nodeName);
      }
    }
    if (this.node.hasChildNodes()) {
      XmlNodeSet nodeSet=(XmlNodeSet)(children(context));
      nodeSet.relink_namespace(context);
    }
  }
}
