{
  if (Modifier.isAbstract(cls.getModifiers()) || !Modifier.isPublic(cls.getModifiers()))   return false;
  if (interfaces != null) {
    for (Iterator it=interfaces.iterator(); it.hasNext(); ) {
      Class iface=(Class)it.next();
      if (iface.isAssignableFrom(cls)) {
        return true;
      }
    }
  }
  if (classAnnotations != null) {
    for (Iterator it=classAnnotations.iterator(); it.hasNext(); ) {
      Class annotation=(Class)it.next();
      if (cls.isAnnotationPresent(annotation)) {
        return true;
      }
    }
  }
  if (methodAnnotations != null) {
    Method[] methods=cls.getMethods();
    for (int j=methods.length; j-- > 0; ) {
      for (Iterator it=methodAnnotations.iterator(); it.hasNext(); ) {
        Class annotation=(Class)it.next();
        if (methods[j].isAnnotationPresent(annotation)) {
          return true;
        }
      }
    }
  }
  if (fieldNames != null) {
    Field[] fields=cls.getFields();
    for (int j=0; j < fields.length; j++) {
      for (Iterator it=fieldNames.iterator(); it.hasNext(); ) {
        if (fields[j].getName().equals(it.next())) {
          return true;
        }
      }
    }
  }
  return false;
}
