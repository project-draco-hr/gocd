{
  File assetsDir=FileUtil.createTempFolder("assets-" + UUID.randomUUID().toString());
  FileUtil.writeContentToFile(json,new File(assetsDir,"manifest-digest.json"));
  SystemEnvironment systemEnvironment=mock(SystemEnvironment.class);
  when(systemEnvironment.get(SystemEnvironment.USE_NEW_RAILS)).thenReturn(true);
  when(systemEnvironment.useCompressedJs()).thenReturn(true);
  GoVelocityView view=new GoVelocityView(systemEnvironment);
  Request servletRequest=mock(Request.class);
  ContextHandler.SContext context=mock(ContextHandler.SContext.class);
  when(context.getInitParameter("rails.root")).thenReturn("");
  when(context.getRealPath(Matchers.<String>any())).thenReturn(assetsDir.getAbsolutePath());
  when(servletRequest.getContext()).thenReturn(context);
  when(servletRequest.getSession()).thenReturn(mock(HttpSession.class));
  view.exposeHelpers(velocityContext,servletRequest);
  assertThat((String)velocityContext.get(GoVelocityView.COMPRESSED_JAVASCRIPT_FILE_PATH),is("assets/application-bfdbd4fff63b0cd45c50ce7a79fe0f53.js"));
  assertThat((String)velocityContext.get(GoVelocityView.COMPRESSED_APPLICATION_CSS_FILE_PATH),is("assets/application-4b25c82f986c0bef78151a4ab277c3e4.css"));
  assertThat((String)velocityContext.get(GoVelocityView.COMPRESSED_VM_CSS_FILE_PATH),is("assets/vm/application-4b25c82f986c0bef78151a4ab277c3f5.css"));
  assertThat((String)velocityContext.get(GoVelocityView.COMPRESSED_CSS_CSS_FILE_PATH),is("assets/css/application-4b25c82f986c0bef78151a4ab277c3g6.css"));
}
