{
  String fieldForHasBeenChangedFlag="hasBeenChangedFromDefault";
  assertNotNull("This can never be null, but can throw an exception. If you've renamed the field mentioned above" + "(in FeatureToggle class), please change it in this test too. Otherwise, this test can pass, wrongly.",FeatureToggle.class.getDeclaredField(fieldForHasBeenChangedFlag));
  setupAvailableToggles(new FeatureToggle("key1","desc1",true));
  File userTogglesFile=setupUserToggles(new FeatureToggle("key1","desc1",false).withValueHasBeenChangedFlag(true));
  FeatureToggleRepository repository=new FeatureToggleRepository(environment);
  repository.changeValueOfToggle("key1",false);
  assertThat(repository.userToggles(),is(new FeatureToggles(new FeatureToggle("key1","desc1",false).withValueHasBeenChangedFlag(false))));
  assertThat(FileUtils.readFileToString(userTogglesFile),containsString("key1"));
  assertThat(FileUtils.readFileToString(userTogglesFile),containsString("desc1"));
  assertThat(FileUtils.readFileToString(userTogglesFile),not(containsString(fieldForHasBeenChangedFlag)));
  repository.changeValueOfToggle("key1",true);
  assertThat(repository.userToggles(),is(new FeatureToggles(new FeatureToggle("key1","desc1",true).withValueHasBeenChangedFlag(false))));
  assertThat(FileUtils.readFileToString(userTogglesFile),containsString("key1"));
  assertThat(FileUtils.readFileToString(userTogglesFile),containsString("desc1"));
  assertThat(FileUtils.readFileToString(userTogglesFile),not(containsString(fieldForHasBeenChangedFlag)));
}
