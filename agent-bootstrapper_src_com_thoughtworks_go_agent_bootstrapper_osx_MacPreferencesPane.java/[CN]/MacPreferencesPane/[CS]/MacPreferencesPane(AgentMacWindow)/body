{
  super();
  this.agentMacWindow=agentMacWindow;
  BorderLayout border=new BorderLayout(10,10);
  getContentPane().setLayout(border);
  createView();
  sslModeComponent.noneModeRadioButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      fileBrowser.setEnabled(!sslModeComponent.noneModeRadioButton.isSelected());
    }
  }
);
  okButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent newEvent){
      try {
        AgentBootstrapperArgs newArgs=new AgentBootstrapperArgs(new URL(serverTextField.getText()),fileBrowser.getFile(),sslModeComponent.getSslMode());
        try {
          new ServerUrlValidator().validate("The server url",newArgs.getServerUrl().toExternalForm());
        }
 catch (        ParameterException e) {
          JOptionPane.showMessageDialog(getContentPane(),e.getMessage(),"Invalid server url",JOptionPane.ERROR_MESSAGE);
          return;
        }
        if (newArgs.getRootCertFile() != null) {
          try {
            new CertificateFileValidator().validate("The server root certificate",newArgs.getRootCertFile().getPath());
          }
 catch (          ParameterException e) {
            JOptionPane.showMessageDialog(getContentPane(),e.getMessage(),"Invalid server root certificate",JOptionPane.ERROR_MESSAGE);
            return;
          }
        }
        if (!newArgs.equals(agentMacWindow.getBootstrapperArgs())) {
          agentMacWindow.setBootstrapperArgs(newArgs);
          LOG.info("Updating preferences to " + newArgs);
        }
 else {
          LOG.info("Preferences are unchanged " + newArgs);
        }
        setVisible(false);
      }
 catch (      MalformedURLException e) {
        JOptionPane.showMessageDialog(getContentPane(),"The server url must be an HTTPS url and must begin with https://","Invalid server url",JOptionPane.ERROR_MESSAGE);
      }
    }
  }
);
  setSize(getPreferredSize());
  setLocation(20,30);
  setResizable(false);
}
