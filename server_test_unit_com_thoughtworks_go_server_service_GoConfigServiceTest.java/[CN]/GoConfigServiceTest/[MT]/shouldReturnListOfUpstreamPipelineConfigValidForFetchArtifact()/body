{
  PipelineConfig unrelatedPipeline=PipelineConfigMother.pipelineConfig("some.random.pipeline");
  PipelineConfig upstream=PipelineConfigMother.createPipelineConfig("upstream","upstream.stage","upstream.job");
  upstream.add(StageConfigMother.stageConfig("upstream.stage.2"));
  upstream.add(StageConfigMother.stageConfig("upstream.stage.3"));
  PipelineConfig downstream=PipelineConfigMother.createPipelineConfig("pipeline","stage.1","jobs");
  downstream.add(StageConfigMother.stageConfig("stage.2"));
  downstream.add(StageConfigMother.stageConfig("current.stage"));
  downstream.addMaterialConfig(new DependencyMaterialConfig(new CaseInsensitiveString("upstream"),new CaseInsensitiveString("upstream.stage.2")));
  CruiseConfig cruiseConfig=configWith(upstream,downstream,unrelatedPipeline);
  when(goConfigDao.load()).thenReturn(cruiseConfig);
  List<PipelineConfig> fetchablePipelines=goConfigService.pipelinesForFetchArtifacts("pipeline");
  assertThat(fetchablePipelines.size(),is(2));
  assertThat(fetchablePipelines,hasItem(upstream));
  assertThat(fetchablePipelines,hasItem(downstream));
}
