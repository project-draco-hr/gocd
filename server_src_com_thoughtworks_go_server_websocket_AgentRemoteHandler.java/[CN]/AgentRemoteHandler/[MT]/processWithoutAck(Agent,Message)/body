{
switch (msg.getAction()) {
case ping:
    AgentRuntimeInfo info=MessageEncoding.decodeData(msg.getData(),AgentRuntimeInfo.class);
  if (!sessionIds.containsKey(agent)) {
    LOGGER.info("{} is connected with websocket {}",info.getIdentifier(),agent);
    sessionIds.put(agent,info.getUUId());
    this.agentSessions.put(info.getUUId(),agent);
  }
if (info.getCookie() == null) {
  String cookie=agentCookie.get(agent);
  if (cookie == null) {
    cookie=buildRepositoryRemote.getCookie(info.getIdentifier(),info.getLocation());
    agentCookie.put(agent,cookie);
  }
  info.setCookie(cookie);
  agent.send(new Message(Action.setCookie,MessageEncoding.encodeData(cookie)));
}
AgentInstruction instruction=this.buildRepositoryRemote.ping(info);
if (instruction.isShouldCancelJob()) {
cancelBuild(agent,info.getSupportsBuildCommandProtocol());
}
break;
case reportCurrentStatus:
Report report=MessageEncoding.decodeData(msg.getData(),Report.class);
buildRepositoryRemote.reportCurrentStatus(report.getAgentRuntimeInfo(),findJobIdentifier(report),report.getJobState());
break;
case reportCompleting:
report=MessageEncoding.decodeData(msg.getData(),Report.class);
buildRepositoryRemote.reportCompleting(report.getAgentRuntimeInfo(),findJobIdentifier(report),report.getResult());
break;
case reportCompleted:
report=MessageEncoding.decodeData(msg.getData(),Report.class);
buildRepositoryRemote.reportCompleted(report.getAgentRuntimeInfo(),findJobIdentifier(report),report.getResult());
break;
default :
throw new RuntimeException("Unknown action: " + msg.getAction());
}
}
