{
  assertAllDirectDependenciesArePresentInInput(actualRevisions,pipelineName);
  Pair<List<RootFanInNode>,List<DependencyFanInNode>> scmAndDepMaterialsChildren=getScmAndDepMaterialsChildren();
  List<RootFanInNode> scmChildren=scmAndDepMaterialsChildren.first();
  List<DependencyFanInNode> depChildren=scmAndDepMaterialsChildren.last();
  if (depChildren.isEmpty()) {
    return actualRevisions;
  }
  FanInGraphContext context=buildContext(pipelineTimeline);
  root.initialize(context);
  initChildren(depChildren,pipelineName,context);
  if (fanInEventListener != null) {
    fanInEventListener.iterationComplete(0,depChildren);
  }
  iterateAndMakeAllUniqueScmRevisionsForChildrenSame(depChildren,pipelineName,context);
  List<MaterialRevision> finalRevisionsForScmChildren=createFinalRevisionsForScmChildren(root.latestPipelineTimelineEntry(context),scmChildren,depChildren);
  List<MaterialRevision> finalRevisionsForDepChildren=createFinalRevisionsForDepChildren(depChildren);
  return new MaterialRevisions(CollectionUtils.union(getMaterialsFromCurrentPipeline(finalRevisionsForScmChildren,actualRevisions),finalRevisionsForDepChildren));
}
