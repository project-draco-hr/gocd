{
  String turtle="@prefix ex: <http://example.com/ontology#> . " + "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> . " + "<http://example.com/1> ex:is \"won\"^^xsd:string . "+ "<http://example.com/2> ex:is \"too\"^^xsd:string . ";
  graph.addTriplesFromTurtle(turtle);
  String sparqlSelect="PREFIX ex: <http://example.com/ontology#> " + "SELECT ?one ?two ?three WHERE { " + "<http://example.com/1> ex:is ?one . "+ "<http://example.com/2> ex:is ?two . "+ "OPTIONAL { <http://example.com/3> ex:is ?three } "+ "}";
  BoundVariables bv=graph.selectFirst(sparqlSelect);
  assertEquals("won",bv.getString("one"));
  assertEquals("too",bv.getString("two"));
  assertNull(bv.getString("three"));
  try {
    bv.getString("baz");
    fail("Illegal argument exception expected.");
  }
 catch (  IllegalArgumentException e) {
    assertEquals("boundName 'baz' is not in the list of possible values ('one', 'two', 'three')",e.getMessage());
  }
}
