{
  CcTrayStatus status=new CcTrayStatus(materialRepo,stageDao);
  String stageName="dev";
  String pipelineName="go";
  JobInstance passedJob=passedJob(pipelineName,DEFAULT_LAST_BUILD_LABEL,stageName,"linux-firefox");
  JobInstance failedJob=failedJob(pipelineName,DEFAULT_LAST_BUILD_LABEL,stageName,"win-firefox");
  Stage failedStage=new Stage(stageName,new JobInstances(passedJob,failedJob),"me","success",false,false,new TimeProvider());
  failedStage.setIdentifier(new StageIdentifier(pipelineName,1,"1",stageName,"1"));
  failedStage.setPipelineId(12l);
  failedStage.calculateResult();
  Modification losersOtherCommit=ModificationsMother.checkinWithComment("125","comment 3","loser","loser@different-email.com",new Date(),"baz.c");
  MaterialRevision revision=new MaterialRevision(MaterialsMother.gitMaterial("foo.com"),losersOtherCommit);
  when(materialRepo.findMaterialRevisionsForPipeline(12l)).thenReturn(new MaterialRevisions(revision));
  revision.markAsChanged();
  status.stageStatusChanged(failedStage);
  HashSet<String> breakers=new HashSet<String>();
  breakers.add("loser");
  assertThat(status.projects().size(),is(3));
  ProjectStatus failedJobEntry=status.getProject(failedJob.getIdentifier().ccProjectName());
  ProjectStatus passedJobEntry=status.getProject(passedJob.getIdentifier().ccProjectName());
  ProjectStatus stageEntry=status.getProject(failedStage.getIdentifier().ccProjectName());
  assertThat((HashSet<String>)failedJobEntry.getBreakers(),is(breakers));
  assertThat((HashSet<String>)stageEntry.getBreakers(),is(breakers));
  assertThat((HashSet<String>)passedJobEntry.getBreakers(),is(new HashSet<String>()));
}
