{
  Ruby runtime=context.getRuntime();
  if (args[0].isNil())   throw runtime.newArgumentError("io cannot be nil");
  XmlReader reader=(XmlReader)NokogiriService.XML_READER_ALLOCATOR.allocate(runtime,getNokogiriClass(runtime,"Nokogiri::XML::Reader"));
  reader.init(runtime);
  reader.setInstanceVariable("@source",args[0]);
  reader.setInstanceVariable("@errors",runtime.newArray());
  IRubyObject url=context.nil;
  if (args.length > 1)   url=args[1];
  if (args.length > 2)   reader.setInstanceVariable("@encoding",args[2]);
  Options options;
  if (args.length > 3) {
    options=new ParserContext.Options((Long)args[3].toJava(Long.class));
  }
 else {
    options=new ParserContext.Options(2048 | 1);
  }
  InputStream in=new UncloseableInputStream(new IOInputStream(args[0]));
  reader.setInput(context,in,url,options);
  return reader;
}
