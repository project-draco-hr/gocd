{
  RubyClass c=k.getMetaClass();
  boolean kNotComparable=!k.respondsTo("<=>");
  TreeNode pp=root, p=null;
  int dir=0;
  while (pp != null) {
    int ph;
    RubyObject pk;
    RubyClass pc;
    p=pp;
    if ((ph=p.hash) == h) {
      if ((pk=(RubyObject)p.key) == k || k.equals(pk))       return p;
      if (c != (pc=pk.getMetaClass()) || kNotComparable || (dir=rubyCompare(k,pk)) == 0) {
        dir=(c == pc) ? 0 : c.getName().compareTo(pc.getName());
        if (dir == 0) {
          TreeNode r=null, pr;
          if ((pr=p.right) != null && h >= pr.hash && (r=getTreeNode(h,k,pr)) != null)           return r;
 else           dir=-1;
        }
      }
    }
 else     dir=(h < ph) ? -1 : 1;
    pp=(dir > 0) ? p.right : p.left;
  }
  TreeNode f=first;
  TreeNode x=first=new TreeNode(h,(Object)k,v,f,p);
  if (p == null)   root=x;
 else {
    TreeNode xp, xpp;
    if (f != null)     f.prev=x;
    if (dir <= 0)     p.left=x;
 else     p.right=x;
    x.red=true;
    while (x != null && (xp=x.parent) != null && xp.red && (xpp=xp.parent) != null) {
      TreeNode xppl=xpp.left;
      if (xp == xppl) {
        TreeNode y=xpp.right;
        if (y != null && y.red) {
          y.red=false;
          xp.red=false;
          xpp.red=true;
          x=xpp;
        }
 else {
          if (x == xp.right) {
            rotateLeft(x=xp);
            xpp=(xp=x.parent) == null ? null : xp.parent;
          }
          if (xp != null) {
            xp.red=false;
            if (xpp != null) {
              xpp.red=true;
              rotateRight(xpp);
            }
          }
        }
      }
 else {
        TreeNode y=xppl;
        if (y != null && y.red) {
          y.red=false;
          xp.red=false;
          xpp.red=true;
          x=xpp;
        }
 else {
          if (x == xp.left) {
            rotateRight(x=xp);
            xpp=(xp=x.parent) == null ? null : xp.parent;
          }
          if (xp != null) {
            xp.red=false;
            if (xpp != null) {
              xpp.red=true;
              rotateLeft(xpp);
            }
          }
        }
      }
    }
    TreeNode r=root;
    if (r != null && r.red)     r.red=false;
  }
  return null;
}
