{
  if (!element.hasAttributes() && !firstCall) {
    return null;
  }
  final SortedSet<Attr> result=this.result;
  result.clear();
  if (element.hasAttributes()) {
    NamedNodeMap attrs=element.getAttributes();
    int attrsLength=attrs.getLength();
    for (int i=0; i < attrsLength; i++) {
      Attr attribute=(Attr)attrs.item(i);
      String NUri=attribute.getNamespaceURI();
      String NName=attribute.getLocalName();
      String NValue=attribute.getValue();
      if (!XMLNS_URI.equals(NUri)) {
        result.add(attribute);
      }
 else       if (!(XML.equals(NName) && XML_LANG_URI.equals(NValue))) {
        Node n=ns.addMappingAndRender(NName,NValue,attribute);
        if (n != null) {
          result.add((Attr)n);
          if (C14nHelper.namespaceIsRelative(attribute)) {
            Object exArgs[]={element.getTagName(),NName,attribute.getNodeValue()};
            throw new CanonicalizationException("c14n.Canonicalizer.RelativeNamespace",exArgs);
          }
        }
      }
    }
  }
  if (firstCall) {
    ns.getUnrenderedNodes(result);
    xmlattrStack.getXmlnsAttr(result);
    firstCall=false;
  }
  return result.iterator();
}
