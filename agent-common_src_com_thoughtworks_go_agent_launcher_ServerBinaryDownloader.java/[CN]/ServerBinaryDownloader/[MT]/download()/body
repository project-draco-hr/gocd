{
  HttpClient httpClient=new HttpClient();
  HttpMethod method=new GetMethod(checkUrl());
  InputStream body=null;
  OutputStream outputFile=null;
  httpClient.setConnectionTimeout(ServerCall.HTTP_TIMEOUT_IN_MILLISECONDS);
  try {
    LOG.info("download started at " + new Date());
    final int status=httpClient.executeMethod(method);
    if (status != 200) {
      throw new Exception("Got status " + status + " "+ method.getStatusText()+ " from server");
    }
    body=new BufferedInputStream(method.getResponseBodyAsStream());
    LOG.info("got server response at " + new Date());
    outputFile=new BufferedOutputStream(new FileOutputStream(new File(downloadableFile.getLocalFileName())));
    IOUtils.copy(body,outputFile);
    LOG.info("pipe the stream to " + downloadableFile + " at "+ new Date());
    return true;
  }
 catch (  Exception e) {
    String message="Couldn't access Go Server with base url: " + downloadableFile.url(urlGenerator) + ": "+ e.toString();
    LOG.error(message);
    throw new Exception(message,e);
  }
 finally {
    IOUtils.closeQuietly(body);
    IOUtils.closeQuietly(outputFile);
    method.releaseConnection();
  }
}
