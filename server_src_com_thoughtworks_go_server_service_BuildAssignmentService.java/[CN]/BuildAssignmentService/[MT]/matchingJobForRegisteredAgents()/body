{
  agentRemoteHandler.connectedAgents().forEach(new BiConsumer<String,Agent>(){
    @Override public void accept(    String agentUUId,    Agent agent){
      AgentInstance agentInstance=agentService.findAgentAndRefreshStatus(agentUUId);
      if (!agentInstance.isRegistered()) {
        agent.send(new Message(Action.reregister));
        return;
      }
      if (agentInstance.isDisabled() || !agentInstance.isIdle()) {
        if (LOGGER.isDebugEnabled()) {
          LOGGER.debug("Ignore agent that is disabled or is not idling: " + agentInstance);
        }
        return;
      }
      Work work=BuildAssignmentService.this.assignWorkToAgent(agentInstance);
      if (work != NO_WORK) {
        agent.send(new Message(Action.assignWork,work));
      }
    }
  }
);
}
