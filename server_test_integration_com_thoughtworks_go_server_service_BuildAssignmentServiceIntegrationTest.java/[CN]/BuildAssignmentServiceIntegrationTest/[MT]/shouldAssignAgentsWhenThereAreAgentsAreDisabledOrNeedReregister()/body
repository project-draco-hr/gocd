{
  fixture.createPipelineWithFirstStageScheduled();
  AgentConfig canceledAgentConfig=AgentMother.remoteAgent();
  configHelper.addAgent(canceledAgentConfig);
  AgentRuntimeInfo canceledAgentInfo=AgentRuntimeInfo.fromServer(canceledAgentConfig,true,"location",1000000l,"OS",false);
  canceledAgentInfo.setCookie("cookie1");
  AgentStub canceledAgent=new AgentStub();
  agentRemoteHandler.process(canceledAgent,new Message(Action.ping,MessageEncoding.encodeData(canceledAgentInfo)));
  AgentInstance agentInstance=agentService.findAgentAndRefreshStatus(canceledAgentInfo.getUUId());
  agentInstance.cancel();
  AgentConfig needRegisterAgentConfig=AgentMother.remoteAgent();
  AgentRuntimeInfo needRegisterAgentInfo=AgentRuntimeInfo.fromServer(needRegisterAgentConfig,true,"location",1000000l,"OS",false);
  agentService.requestRegistration(new Username("bob"),needRegisterAgentInfo);
  needRegisterAgentInfo.setCookie("cookie2");
  AgentStub needRegisterAgent=new AgentStub();
  agentRemoteHandler.process(needRegisterAgent,new Message(Action.ping,MessageEncoding.encodeData(needRegisterAgentInfo)));
  AgentConfig assignedAgent=AgentMother.remoteAgent();
  configHelper.addAgent(assignedAgent);
  AgentRuntimeInfo assignedAgentInfo=AgentRuntimeInfo.fromServer(assignedAgent,true,"location",1000000l,"OS",false);
  assignedAgentInfo.setCookie("cookie3");
  agentRemoteHandler.process(agent,new Message(Action.ping,MessageEncoding.encodeData(assignedAgentInfo)));
  buildAssignmentService.onTimer();
  assertThat(canceledAgent.messages.size(),is(0));
  assertThat(needRegisterAgent.messages.size(),is(1));
  assertThat(needRegisterAgent.messages.get(0).getAction(),is(Action.reregister));
  assertThat(agent.messages.size(),is(1));
  assertThat(MessageEncoding.decodeWork(agent.messages.get(0).getData()),instanceOf(BuildWork.class));
}
