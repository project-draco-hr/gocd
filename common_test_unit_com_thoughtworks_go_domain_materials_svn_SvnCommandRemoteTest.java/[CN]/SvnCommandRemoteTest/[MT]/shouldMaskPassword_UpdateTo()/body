{
  command.checkoutTo(outputStreamConsumer,workingDir,new SubversionRevision(2));
  command.updateTo(outputStreamConsumer,workingDir,new SubversionRevision(2));
  assertThat("Plain text password detected!",outputStreamConsumer.getAllOutput().contains(HARRYS_PASSWORD),Is.is(false));
  try {
    badUserNameCommand().updateTo(outputStreamConsumer,workingDir,new SubversionRevision(2));
    fail("should have failed");
  }
 catch (  Exception e) {
    assertThat("Plain text password detected!",e.getMessage().contains(HARRYS_PASSWORD),Is.is(false));
    assertThat("Plain text password detected!",outputStreamConsumer.getAllOutput().contains(HARRYS_PASSWORD),Is.is(false));
  }
  try {
    badPasswordCommand().updateTo(outputStreamConsumer,workingDir,new SubversionRevision(2));
    fail("should have failed");
  }
 catch (  Exception e) {
    assertThat("Plain text password detected!",e.getMessage().contains("some_bad_password"),Is.is(false));
    assertThat("Plain text password detected!",outputStreamConsumer.getAllOutput().contains("some_bad_password"),Is.is(false));
  }
  try {
    badUrlCommand().updateTo(outputStreamConsumer,workingDir,new SubversionRevision(2));
    fail("should have failed");
  }
 catch (  Exception e) {
    assertThat("Plain text password detected!",e.getMessage().contains(HARRYS_PASSWORD),Is.is(false));
    assertThat("Plain text password detected!",outputStreamConsumer.getAllOutput().contains(HARRYS_PASSWORD),Is.is(false));
  }
}
