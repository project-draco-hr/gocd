{
  pipelineOne.createPipelineWithFirstStagePassedAndSecondStageHasNotStarted();
  HttpOperationResult result=new HttpOperationResult();
  PipelineInstanceModels pipelineInstanceModels=pipelineHistoryService.loadMinimalData(pipelineOne.pipelineName,Pagination.pageStartingAt(0,1,10),new Username(new CaseInsensitiveString("admin1")),result);
  StageInstanceModels stageHistory=pipelineInstanceModels.first().getStageHistory();
  assertThat("Should populate 2 placeholder stages from config",stageHistory.size(),is(3));
  assertThat(stageHistory.first().isScheduled(),is(true));
  assertThat(stageHistory.first().isAutoApproved(),is(true));
  assertThat(stageHistory.first().getCanRun(),is(true));
  assertThat(stageHistory.get(1).isScheduled(),is(false));
  assertThat(stageHistory.get(1).isAutoApproved(),is(false));
  assertThat("The first future stage should can run",stageHistory.get(1).getCanRun(),is(true));
  assertThat(stageHistory.get(2).isScheduled(),is(false));
  assertThat(stageHistory.get(2).isAutoApproved(),is(true));
  assertThat("The second future stage should can not run",stageHistory.get(2).getCanRun(),is(false));
}
