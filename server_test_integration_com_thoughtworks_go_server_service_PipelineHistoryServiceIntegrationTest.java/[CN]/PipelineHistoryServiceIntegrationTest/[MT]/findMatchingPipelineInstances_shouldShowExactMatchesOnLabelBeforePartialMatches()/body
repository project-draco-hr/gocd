{
  final int limit=3;
  PipelineConfig pipelineConfig=PipelineConfigMother.createPipelineConfig("pipeline_name","stage","job");
  goConfigService.addPipeline(pipelineConfig,"pipeline-group");
  pipelineConfig.setLabelTemplate("${COUNT}-ABC");
  Pipeline shouldMatch1=dbHelper.schedulePipeline(pipelineConfig,ModificationsMother.buildCauseForOneModifiedFile(pipelineConfig,"revision","comment","committer"),new TimeProvider());
  dbHelper.cancelStage(shouldMatch1.getStages().get(0));
  Pipeline shouldMatch2=dbHelper.schedulePipeline(pipelineConfig,ModificationsMother.buildCauseForOneModifiedFile(pipelineConfig,String.format("revision-%s-abc-should-match",shouldMatch1.getCounter()),"another comment","committer"),new TimeProvider());
  dbHelper.cancelStage(shouldMatch2.getStages().get(0));
  PipelineInstanceModels actual=pipelineHistoryService.findMatchingPipelineInstances("pipeline_name",String.format("%s-ABC",shouldMatch1.getCounter()),limit,new Username(new CaseInsensitiveString("user")),new HttpLocalizedOperationResult());
  assertThat("size",actual.size(),is(2));
  assertThat("first counter",actual.get(0).getCounter(),is(shouldMatch1.getCounter()));
  assertThat("second counter",actual.get(1).getCounter(),is(shouldMatch2.getCounter()));
}
