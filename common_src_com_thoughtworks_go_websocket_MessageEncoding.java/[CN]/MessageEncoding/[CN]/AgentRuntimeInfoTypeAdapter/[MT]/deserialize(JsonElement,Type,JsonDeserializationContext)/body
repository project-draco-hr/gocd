{
  JsonObject jsonObject=json.getAsJsonObject();
  AgentIdentifier identifier=context.deserialize(jsonObject.get("identifier"),AgentIdentifier.class);
  AgentRuntimeStatus runtimeStatus=context.deserialize(jsonObject.get("runtimeStatus"),AgentRuntimeStatus.class);
  AgentBuildingInfo buildingInfo=context.deserialize(jsonObject.get("buildingInfo"),AgentBuildingInfo.class);
  String location=jsonObject.has("location") ? jsonObject.get("location").getAsString() : null;
  Long usableSpace=jsonObject.has("usableSpace") ? jsonObject.get("usableSpace").getAsLong() : null;
  String operatingSystemName=jsonObject.has("operatingSystemName") ? jsonObject.get("operatingSystemName").getAsString() : null;
  String cookie=jsonObject.has("cookie") ? jsonObject.get("cookie").getAsString() : null;
  String agentLauncherVersion=jsonObject.has("agentLauncherVersion") ? jsonObject.get("agentLauncherVersion").getAsString() : null;
  boolean supportsBuildCommandProtocol=jsonObject.has("supportsBuildCommandProtocol") && jsonObject.get("supportsBuildCommandProtocol").getAsBoolean();
  String elasticPluginId=jsonObject.has("elasticPluginId") ? jsonObject.get("elasticPluginId").getAsString() : null;
  String elasticAgentId=jsonObject.has("elasticAgentId") ? jsonObject.get("elasticAgentId").getAsString() : null;
  AgentRuntimeInfo info;
  if (elasticPluginId == null || StringUtil.isBlank(elasticPluginId)) {
    info=new AgentRuntimeInfo(identifier,runtimeStatus,location,cookie,agentLauncherVersion,supportsBuildCommandProtocol);
  }
 else {
    info=new ElasticAgentRuntimeInfo(identifier,runtimeStatus,location,cookie,agentLauncherVersion,elasticAgentId,elasticPluginId);
  }
  info.setUsableSpace(usableSpace);
  info.setOperatingSystem(operatingSystemName);
  info.setSupportsBuildCommandProtocol(supportsBuildCommandProtocol);
  info.setBuildingInfo(buildingInfo);
  return info;
}
