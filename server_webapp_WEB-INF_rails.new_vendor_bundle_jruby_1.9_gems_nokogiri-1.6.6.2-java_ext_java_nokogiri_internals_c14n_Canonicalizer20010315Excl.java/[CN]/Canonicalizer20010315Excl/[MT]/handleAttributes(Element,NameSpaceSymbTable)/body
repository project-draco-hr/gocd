{
  final SortedSet<Attr> result=this.result;
  result.clear();
  Set<String> visiblyUtilized=null;
  boolean isOutputElement=isVisibleDO(element,ns.getLevel()) == 1;
  if (isOutputElement) {
    visiblyUtilized=new TreeSet<String>();
    if (inclusiveNSSet != null && !inclusiveNSSet.isEmpty()) {
      visiblyUtilized.addAll(inclusiveNSSet);
    }
  }
  if (element.hasAttributes()) {
    NamedNodeMap attrs=element.getAttributes();
    int attrsLength=attrs.getLength();
    for (int i=0; i < attrsLength; i++) {
      Attr attribute=(Attr)attrs.item(i);
      String NName=attribute.getLocalName();
      String NNodeValue=attribute.getNodeValue();
      if (!XMLNS_URI.equals(attribute.getNamespaceURI())) {
        if (isVisible(attribute) && isOutputElement) {
          String prefix=attribute.getPrefix();
          if (prefix != null && !(prefix.equals(XML) || prefix.equals(XMLNS))) {
            visiblyUtilized.add(prefix);
          }
          result.add(attribute);
        }
      }
 else       if (isOutputElement && !isVisible(attribute) && !XMLNS.equals(NName)) {
        ns.removeMappingIfNotRender(NName);
      }
 else {
        if (!isOutputElement && isVisible(attribute) && inclusiveNSSet.contains(NName)&& !ns.removeMappingIfRender(NName)) {
          Node n=ns.addMappingAndRender(NName,NNodeValue,attribute);
          if (n != null) {
            result.add((Attr)n);
            if (C14nHelper.namespaceIsRelative(attribute)) {
              Object exArgs[]={element.getTagName(),NName,attribute.getNodeValue()};
              throw new CanonicalizationException("c14n.Canonicalizer.RelativeNamespace",exArgs);
            }
          }
        }
        if (ns.addMapping(NName,NNodeValue,attribute) && C14nHelper.namespaceIsRelative(NNodeValue)) {
          Object exArgs[]={element.getTagName(),NName,attribute.getNodeValue()};
          throw new CanonicalizationException("c14n.Canonicalizer.RelativeNamespace",exArgs);
        }
      }
    }
  }
  if (isOutputElement) {
    Attr xmlns=element.getAttributeNodeNS(XMLNS_URI,XMLNS);
    if (xmlns != null && !isVisible(xmlns)) {
      ns.addMapping(XMLNS,"",nullNode);
    }
    String prefix=null;
    if (element.getNamespaceURI() != null && !(element.getPrefix() == null || element.getPrefix().length() == 0)) {
      prefix=element.getPrefix();
    }
 else {
      prefix=XMLNS;
    }
    visiblyUtilized.add(prefix);
    for (    String s : visiblyUtilized) {
      Attr key=ns.getMapping(s);
      if (key != null) {
        result.add(key);
      }
    }
  }
  return result.iterator();
}
