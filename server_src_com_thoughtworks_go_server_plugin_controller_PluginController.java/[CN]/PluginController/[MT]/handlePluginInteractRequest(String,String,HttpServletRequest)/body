{
  if (!isAuthPlugin(pluginId)) {
    return ResponseCodeView.create(SC_FORBIDDEN,"Plugin interact endpoint is enabled only for Authentication Plugins");
  }
  if (isRestrictedRequestName(requestName)) {
    return ResponseCodeView.create(SC_FORBIDDEN,String.format("Plugin interact for '%s' requestName is disallowed.",requestName));
  }
  DefaultGoPluginApiRequest apiRequest=new DefaultGoPluginApiRequest(null,null,requestName);
  apiRequest.setRequestParams(getParameterMap(request));
  addRequestHeaders(request,apiRequest);
  try {
    GoPluginApiResponse response=pluginManager.submitTo(pluginId,apiRequest);
    if (DefaultGoApiResponse.SUCCESS_RESPONSE_CODE == response.responseCode()) {
      return renderPluginResponse(response);
    }
    if (DefaultGoApiResponse.REDIRECT_RESPONSE_CODE == response.responseCode()) {
      String location="";
      if (hasValueFor(response,"Location")) {
        location=response.responseHeaders().get("Location");
      }
      return new ModelAndView("redirect:" + location);
    }
  }
 catch (  Exception e) {
  }
  throw new RuntimeException("render error page");
}
