{
  String acceptance="acceptance";
  String plugins="plugins";
  String gitPlugins="git-plugins";
  String cruise="cruise";
  String gitTrunk="git-trunk";
  String hgTrunk="hg-trunk";
  String deployGo03="deploy-go03";
  String deployGo02="deploy-go02";
  String deployGo01="deploy-go01";
  String publish="publish";
  ValueStreamMap graph=new ValueStreamMap(acceptance,null);
  graph.addUpstreamNode(new PipelineDependencyNode(plugins,plugins),null,acceptance);
  graph.addUpstreamNode(new PipelineDependencyNode(gitPlugins,gitPlugins),null,plugins);
  graph.addUpstreamNode(new PipelineDependencyNode(cruise,cruise),null,plugins);
  graph.addUpstreamMaterialNode(new SCMDependencyNode(gitTrunk,gitTrunk,"git"),null,cruise,new MaterialRevision(null));
  graph.addUpstreamMaterialNode(new SCMDependencyNode(hgTrunk,hgTrunk,"hg"),null,cruise,new MaterialRevision(null));
  graph.addUpstreamNode(new PipelineDependencyNode(cruise,cruise),null,acceptance);
  graph.addUpstreamMaterialNode(new SCMDependencyNode(hgTrunk,hgTrunk,"hg"),null,acceptance,new MaterialRevision(null));
  graph.addDownstreamNode(new PipelineDependencyNode(deployGo03,deployGo03),acceptance);
  graph.addDownstreamNode(new PipelineDependencyNode(publish,publish),deployGo03);
  graph.addDownstreamNode(new PipelineDependencyNode(deployGo01,deployGo01),publish);
  graph.addDownstreamNode(new PipelineDependencyNode(deployGo02,deployGo02),acceptance);
  graph.addDownstreamNode(new PipelineDependencyNode(deployGo01,deployGo01),deployGo02);
  List<List<Node>> nodesAtEachLevel=graph.presentationModel().getNodesAtEachLevel();
  assertThat(nodesAtEachLevel.size(),is(7));
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(0),0,gitTrunk,hgTrunk);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(1),1,gitPlugins,cruise);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(2),2,plugins);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(3),0,acceptance);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(4),0,deployGo03,deployGo02);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(5),1,publish);
  VSMTestHelper.assertThatLevelHasNodes(nodesAtEachLevel.get(6),0,deployGo01);
  MatcherAssert.assertThat(graph.findNode(gitTrunk).getDepth(),is(2));
  MatcherAssert.assertThat(graph.findNode(hgTrunk).getDepth(),is(3));
  MatcherAssert.assertThat(graph.findNode(gitPlugins).getDepth(),is(1));
  MatcherAssert.assertThat(graph.findNode(cruise).getDepth(),is(2));
  MatcherAssert.assertThat(graph.findNode(deployGo03).getDepth(),is(1));
  MatcherAssert.assertThat(graph.findNode(deployGo02).getDepth(),is(2));
  MatcherAssert.assertThat(graph.findNode(publish).getDepth(),is(1));
  MatcherAssert.assertThat(graph.findNode(deployGo01).getDepth(),is(1));
}
