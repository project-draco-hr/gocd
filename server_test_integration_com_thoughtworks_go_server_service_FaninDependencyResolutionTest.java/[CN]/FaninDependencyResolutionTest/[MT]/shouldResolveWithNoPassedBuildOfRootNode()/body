{
  GitMaterial git=u.wf(new GitMaterial("git"),"folder1");
  String[] git_revs={"g1"};
  int i=0;
  u.checkinInOrder(git,u.d(i++),git_revs);
  ScheduleTestUtil.AddedPipeline p1=u.saveConfigWith("P1",u.m(git));
  ScheduleTestUtil.AddedPipeline p2=u.saveConfigWith("P2",u.m(p1),u.m(git));
  CruiseConfig cruiseConfig=goConfigDao.load();
  String p1_1=u.runAndPassWithGivenMDUTimestampAndRevisionStrings(p1,u.d(i++),"g1");
  setMaxBackTrackLimit(2);
  for (int j=1; j <= maxBackTrackLimit() + 1; j++) {
    u.runAndFail(p2,u.d(i++),p1_1,"g1");
  }
  MaterialRevisions given=u.mrs(u.mr(p1,true,p1_1),u.mr(git,true,"g1"));
  MaterialRevisions finalRevisions=getRevisionsBasedOnDependencies(p2,cruiseConfig,given);
  assertThat(finalRevisions,is(given));
}
