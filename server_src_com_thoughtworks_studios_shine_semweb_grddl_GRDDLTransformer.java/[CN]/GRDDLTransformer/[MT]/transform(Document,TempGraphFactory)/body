{
  final DocumentResult result=new DocumentResult();
  try {
    xsltTransformerRegistry.transformWithCorrectClassLoader(key,new XSLTTransformerExecutor<Void>(){
      @Override public Void execute(      Transformer transformer) throws TransformerException {
        DocumentSource source=new DocumentSource(inputDoc);
        transformer.transform(source,result);
        return null;
      }
    }
);
    Graph graph=graphFactory.createTempGraph();
    graph.addTriplesFromRDFXMLAbbrev(new StringReader(result.getDocument().asXML()));
    return graph;
  }
 catch (  ShineRuntimeException e) {
    LOGGER.error("Could not convert to a graph. The document was: \n" + result.getDocument().asXML(),e);
    throw e;
  }
catch (  TransformerException e) {
    LOGGER.warn("Could not perform grddl transform. The document was: \n" + result.getDocument().asXML(),e);
    throw new GrddlTransformException(e);
  }
}
