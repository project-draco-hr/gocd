{
  ArtifactPropertiesGenerator prop1=new ArtifactPropertiesGenerator("test1","src","//xpath");
  ArtifactPropertiesGenerator prop2=new ArtifactPropertiesGenerator("test2","src","//xpath");
  ArtifactPropertiesGenerator prop3=new ArtifactPropertiesGenerator("test3","src","//xpath");
  ArtifactPropertiesGenerator prop4=new ArtifactPropertiesGenerator("test4","src","//xpath");
  ArtifactPropertiesGenerator prop5=new ArtifactPropertiesGenerator("test5","src","//xpath");
  JobInstance instance=jobInstanceDao.save(stageId,new JobInstance(projectOne));
  instance.setIdentifier(new JobIdentifier(savedPipeline,savedStage,instance));
  JobPlan savedPlan=new DefaultJobPlan(new Resources(),artifactPlans(),new ArtifactPropertiesGenerators(prop1,prop2,prop3,prop4,prop5),instance.getId(),instance.getIdentifier());
  jobInstanceDao.save(instance.getId(),savedPlan);
  JobPlan plan=findPlan(jobInstanceDao.orderedScheduledBuilds(),projectOne);
  List<ArtifactPropertiesGenerator> generators=plan.getPropertyGenerators();
  assertThat(generators.size(),is(5));
  assertThat(generators.get(0),is(prop1));
  assertThat(generators.get(1),is(prop2));
  assertThat(generators.get(2),is(prop3));
  assertThat(generators.get(3),is(prop4));
  assertThat(generators.get(4),is(prop5));
}
