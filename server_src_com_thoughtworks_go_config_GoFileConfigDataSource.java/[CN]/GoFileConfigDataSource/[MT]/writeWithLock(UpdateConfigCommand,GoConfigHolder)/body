{
  try {
    String configAsXml=getModifiedConfig(updatingCommand,configHolder);
    LOGGER.info(String.format("[Configuration Changed] Saving updated configuration."));
    writeToConfigXmlFile(configAsXml);
    ConfigSaveState configSaveState=shouldMergeConfig(updatingCommand,configHolder) ? ConfigSaveState.MERGED : ConfigSaveState.UPDATED;
    return new GoConfigSaveResult(internalLoad(configAsXml,getConfigUpdatingUser(updatingCommand)),configSaveState);
  }
 catch (  ConfigFileHasChangedException e) {
    LOGGER.warn("Configuration file could not be merged successfully after a concurrent edit: " + e.getMessage(),e);
    throw e;
  }
catch (  GoConfigInvalidException e) {
    LOGGER.warn("Configuration file is invalid: " + e.getMessage(),e);
    throw bomb(e.getMessage(),e);
  }
catch (  Exception e) {
    LOGGER.error("Configuration file is not valid: " + e.getMessage(),e);
    throw bomb(e.getMessage(),e);
  }
 finally {
    LOGGER.debug("[Config Save] Done writing with lock");
  }
}
