{
  try {
    GoConfigHolder validatedConfigHolder;
    List<PartialConfig> lastKnownPartials=cloner.deepClone(cachedGoPartials.lastKnownPartials());
    List<PartialConfig> lastValidPartials=cloner.deepClone(cachedGoPartials.lastValidPartials());
    try {
      String configAsXml=trySavingConfig(updatingCommand,configHolder,lastKnownPartials);
      validatedConfigHolder=internalLoad(configAsXml,getConfigUpdatingUser(updatingCommand),lastKnownPartials);
      updateMergedConfigForEdit(validatedConfigHolder,lastKnownPartials);
    }
 catch (    Exception e) {
      if (lastKnownPartials.isEmpty() || areKnownPartialsSameAsValidPartials(lastKnownPartials,lastValidPartials)) {
        throw e;
      }
 else {
        LOGGER.warn(String.format("Merged config update operation failed on LATEST %s partials. Falling back to using LAST VALID %s partials. Exception message was: %s",lastKnownPartials.size(),lastValidPartials.size(),e.getMessage()),e);
        try {
          String configAsXml=trySavingConfig(updatingCommand,configHolder,lastValidPartials);
          validatedConfigHolder=internalLoad(configAsXml,getConfigUpdatingUser(updatingCommand),lastValidPartials);
          updateMergedConfigForEdit(validatedConfigHolder,lastValidPartials);
          LOGGER.info(String.format("Update operation on merged configuration succeeded with old %s LAST VALID partials.",lastValidPartials.size()));
        }
 catch (        GoConfigInvalidException fallbackFailed) {
          LOGGER.warn(String.format("Merged config update operation failed using fallback LAST VALID %s partials. Exception message was: %s",lastValidPartials.size(),fallbackFailed.getMessage()),fallbackFailed);
          throw new GoConfigInvalidMergeException("Fallback merge failed",lastValidPartials,fallbackFailed);
        }
      }
    }
    ConfigSaveState configSaveState=shouldMergeConfig(updatingCommand,configHolder) ? ConfigSaveState.MERGED : ConfigSaveState.UPDATED;
    return new GoConfigSaveResult(validatedConfigHolder,configSaveState);
  }
 catch (  ConfigFileHasChangedException e) {
    LOGGER.warn("Configuration file could not be merged successfully after a concurrent edit: " + e.getMessage(),e);
    throw e;
  }
catch (  GoConfigInvalidException e) {
    LOGGER.warn("Configuration file is invalid: " + e.getMessage(),e);
    throw bomb(e.getMessage(),e);
  }
catch (  Exception e) {
    LOGGER.error("Configuration file is not valid: " + e.getMessage(),e);
    throw bomb(e.getMessage(),e);
  }
 finally {
    LOGGER.debug("[Config Save] Done writing with lock");
  }
}
