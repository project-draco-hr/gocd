{
  StagesQueryCache.CacheKey key=new StagesQueryCache.CacheKey(sparql,stageIdentifier);
  List<T> mappedResults=(List<T>)cache.get(key);
  if (mappedResults != null) {
    return mappedResults;
  }
synchronized (key.getKey().intern()) {
    mappedResults=(List<T>)cache.get(key);
    if (mappedResults != null) {
      return mappedResults;
    }
    Graph graph=stageGraphLoader.load(stageIdentifier);
    List<BoundVariables> boundVariableses=graph.select(sparql);
    mappedResults=new ArrayList<T>();
    for (    BoundVariables bv : boundVariableses) {
      mappedResults.add(mapper.map(bv));
    }
    cache.put(mappedResults,key);
    return mappedResults;
  }
}
