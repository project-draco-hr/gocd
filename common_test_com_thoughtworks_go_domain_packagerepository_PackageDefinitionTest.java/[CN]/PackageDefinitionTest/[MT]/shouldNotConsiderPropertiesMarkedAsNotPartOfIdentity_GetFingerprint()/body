{
  String pluginId="plugin-id";
  PackageConfigurations repositoryConfigurations=new PackageConfigurations();
  repositoryConfigurations.add(new PackageConfiguration("rk1","rv1").with(PackageConfiguration.PART_OF_IDENTITY,true));
  repositoryConfigurations.add(new PackageConfiguration("rk2","rv2").with(PackageConfiguration.PART_OF_IDENTITY,false));
  RepositoryMetadataStore.getInstance().addMetadataFor(pluginId,repositoryConfigurations);
  PackageConfigurations packageConfigurations=new PackageConfigurations();
  packageConfigurations.add(new PackageConfiguration("pk1","pv1").with(PackageConfiguration.PART_OF_IDENTITY,false));
  packageConfigurations.add(new PackageConfiguration("pk2","pv2").with(PackageConfiguration.PART_OF_IDENTITY,true));
  PackageMetadataStore.getInstance().addMetadataFor(pluginId,packageConfigurations);
  PackageRepository repository=PackageRepositoryMother.create("repo-id","repo",pluginId,"version",new Configuration(create("rk1",false,"rv1"),create("rk2",false,"rv2")));
  PackageDefinition packageDefinition=PackageDefinitionMother.create("p-id","name",new Configuration(create("pk1",false,"pv1"),create("pk2",false,"pv2")),repository);
  String fingerprint=packageDefinition.getFingerprint(AbstractMaterial.FINGERPRINT_DELIMITER);
  assertThat(fingerprint,is(CachedDigestUtils.sha256Hex("plugin-id=plugin-id<|>pk2=pv2<|>rk1=rv1")));
}
