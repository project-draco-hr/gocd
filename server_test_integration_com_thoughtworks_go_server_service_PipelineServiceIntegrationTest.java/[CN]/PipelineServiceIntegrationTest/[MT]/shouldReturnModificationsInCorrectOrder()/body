{
  File file1=new File("file1");
  File file2=new File("file2");
  File file3=new File("file3");
  File file4=new File("file4");
  Material hg1=new HgMaterial("url1","Dest1");
  String[] hgRevs=new String[]{"hg1_2"};
  Date latestModification=new Date();
  Date older=DateUtils.addDays(latestModification,-1);
  u.checkinFiles(hg1,"hg1_1",a(file1,file2,file3,file4),ModifiedAction.added,older);
  u.checkinFiles(hg1,"hg1_2",a(file1,file2,file3,file4),ModifiedAction.modified,latestModification);
  ScheduleTestUtil.AddedPipeline pair01=u.saveConfigWith("pair01","stageName",u.m(hg1));
  u.runAndPass(pair01,hgRevs);
  ReflectionUtil.invoke(pipelineSqlMapDao,"initDao");
  Pipeline pipeline=pipelineService.mostRecentFullPipelineByName("pair01");
  MaterialRevisions materialRevisions=pipeline.getBuildCause().getMaterialRevisions();
  assertThat(materialRevisions.getMaterials().size(),is(1));
  assertThat(materialRevisions.getDateOfLatestModification().getTime(),is(latestModification.getTime()));
}
