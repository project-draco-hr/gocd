{
  ValidationBean validationBean=getPipelineBean(pipelineName).validate();
  if (!validationBean.isValid()) {
    return JsonAction.jsonBadRequest(validationBean).createView();
  }
  validationBean=Validator.PIPELINEGROUP.validate(pipelineGroup);
  if (!validationBean.isValid()) {
    return JsonAction.jsonBadRequest(validationBean).createView();
  }
  CaseInsensitiveString currentUserName=currentUser().getUsername();
  if (!securityService.isUserAdmin(currentUser()) && !securityService.isUserAdminOfGroup(currentUserName,pipelineGroup)) {
    String message=String.format("User '%s' is not authorised to add pipelines to pipeline group %s",currentUserName,pipelineGroup);
    JsonMap jsonMap=new JsonMap();
    jsonMap.put("error",message);
    return JsonAction.jsonBadRequest(jsonMap).createView();
  }
  MaterialConfig materialConfigsBean=materialFactory.getMaterial(scm,url,username,password,useTickets,view,branch,projectPath,domain);
  PipelineBean bean=new PipelineBean(pipelineName.trim(),materialConfigsBean,builder,buildfile,target,src,dest,type,command,arguments);
  pipelinePauseService.pause(pipelineName,"Under construction",currentUser());
  goConfigService.addPipeline(bean.getPipelineConfig(),StringUtils.defaultIfEmpty(pipelineGroup,DEFAULT_GROUP));
  return JsonAction.jsonCreated(ValidationBean.valid("Pipeline successfully created.")).respond(response);
}
