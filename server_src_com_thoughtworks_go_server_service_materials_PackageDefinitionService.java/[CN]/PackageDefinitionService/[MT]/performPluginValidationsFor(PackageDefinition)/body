{
  String pluginId=packageDefinition.getRepository().getPluginConfiguration().getId();
  ValidationResult validationResult=packageAsRepositoryExtension.isPackageConfigurationValid(pluginId,buildPackageConfigurations(packageDefinition),buildRepositoryConfigurations(packageDefinition.getRepository()));
  for (  ValidationError error : validationResult.getErrors()) {
    packageDefinition.addConfigurationErrorFor(error.getKey(),error.getMessage());
  }
  for (  ConfigurationProperty configurationProperty : packageDefinition.getConfiguration()) {
    String key=configurationProperty.getConfigurationKey().getName();
    if (PackageMetadataStore.getInstance().hasOption(packageDefinition.getRepository().getPluginConfiguration().getId(),key,PackageConfiguration.REQUIRED)) {
      if (configurationProperty.getValue().isEmpty() && configurationProperty.doesNotHaveErrorsAgainstConfigurationValue()) {
        configurationProperty.addErrorAgainstConfigurationValue(localizer.localize("MANDATORY_CONFIGURATION_FIELD_WITH_NAME",configurationProperty.getConfigurationKey().getName()));
      }
    }
  }
}
