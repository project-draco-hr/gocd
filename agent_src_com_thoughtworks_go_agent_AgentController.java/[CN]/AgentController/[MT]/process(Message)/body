{
switch (message.getAction()) {
case cancelJob:
    cancelJobIfThereIsOneRunning();
  break;
case setCookie:
String cookie=(String)message.getData();
agentRuntimeInfo.setCookie(cookie);
LOG.info("Got cookie: {}",cookie);
break;
case assignWork:
cancelJobIfThereIsOneRunning();
Work work=(Work)message.getData();
LOG.debug("Got work from server: [{}]",work.description());
agentRuntimeInfo.idle();
runner=new JobRunner();
try {
runner.run(work,agentIdentifier(),new AgentWebsocketService.BuildRepositoryRemoteAdapter(runner,websocketService),manipulator,agentRuntimeInfo,packageAsRepositoryExtension,scmExtension,taskExtension);
}
  finally {
agentRuntimeInfo.idle();
updateServerAgentRuntimeInfo();
}
break;
case reregister:
LOG.warn("Reregister: invalidate current agent certificate fingerprint {} and stop websocket client.",agentRegistry.uuid());
websocketService.stop();
sslInfrastructureService.invalidateAgentCertificate();
break;
case ack:
String messageId=(String)message.getData();
MessageCallback callback=callbacks.remove(messageId);
if (callback != null) {
callback.call();
}
break;
default :
throw new RuntimeException("Unknown action: " + message.getAction());
}
}
