{
  PipelineDao pipelineDao=mock(PipelineDao.class);
  TransactionSynchronizationManager transactionSynchronizationManager=mock(TransactionSynchronizationManager.class);
  StageRunFinder runFinder=new StageService(stageDao,jobInstanceService,mock(StageStatusTopic.class),mock(StageStatusCache.class),securityService,pipelineDao,changesetService,goConfigService,transactionTemplate,transactionSynchronizationManager,goCache);
  List<StageIdentifier> expectedStages=new ArrayList<StageIdentifier>();
  expectedStages.add(new StageIdentifier(PIPELINE_NAME,3,STAGE_NAME,"1"));
  expectedStages.add(new StageIdentifier(PIPELINE_NAME,2,STAGE_NAME,"2"));
  expectedStages.add(new StageIdentifier(PIPELINE_NAME,1,STAGE_NAME,"1"));
  Pipeline pipeline=pipeline(10.0);
  Pipeline pipelineThatLastPassed=pipeline(5.0);
  when(pipelineDao.findPipelineByNameAndCounter(PIPELINE_NAME,3)).thenReturn(pipeline);
  when(pipelineDao.findEarlierPipelineThatPassedForStage(PIPELINE_NAME,STAGE_NAME,10.0)).thenReturn(pipelineThatLastPassed);
  when(stageDao.findFailedStagesBetween(PIPELINE_NAME,STAGE_NAME,5.0,10.0)).thenReturn(asList(identifier(3,"1"),identifier(2,"2"),identifier(1,"1")));
  assertEquals(expectedStages,runFinder.findRunForStage(new StageIdentifier(PIPELINE_NAME,3,STAGE_NAME,"1")));
}
