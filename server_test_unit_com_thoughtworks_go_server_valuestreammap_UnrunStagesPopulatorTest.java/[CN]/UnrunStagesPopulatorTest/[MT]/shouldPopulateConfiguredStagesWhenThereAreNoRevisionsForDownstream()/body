{
  ValueStreamMap graph=new ValueStreamMap("p",revision("p",1));
  Node p1_node=graph.addDownstreamNode(new PipelineDependencyNode("p1","p1"),"p");
  Node p2_node=graph.addDownstreamNode(new PipelineDependencyNode("p2","p2"),"p1");
  Node p3_node=graph.addDownstreamNode(new PipelineDependencyNode("p3","p3"),"p");
  addRevisions(p1_node);
  CruiseConfig cruiseConfig=new CruiseConfig();
  String group="first";
  cruiseConfig.addPipeline(group,pipelineConfig("p"));
  cruiseConfig.addPipeline(group,pipelineConfig("p1"));
  cruiseConfig.addPipeline(group,pipelineConfig("p2"));
  cruiseConfig.addPipeline(group,pipelineConfig("p3"));
  when(goConfigService.getCurrentConfig()).thenReturn(cruiseConfig);
  unrunStagesPopulator.apply(graph);
  assertThat(p2_node.revisions(),hasSize(1));
  PipelineRevision empty_p2_revision=(PipelineRevision)p2_node.revisions().get(0);
  assertThat(empty_p2_revision.getPipelineIdentifier(),Matchers.is(new UnrunPipelineRevision("p2").getPipelineIdentifier()));
  assertThat(empty_p2_revision.getStages(),is(new Stages(new NullStage("s1"),new NullStage("s2"),new NullStage("s3"),new NullStage("s4"))));
  assertThat(p3_node.revisions(),hasSize(1));
  PipelineRevision empty_p3_revision=(PipelineRevision)p3_node.revisions().get(0);
  assertThat(empty_p2_revision.getPipelineIdentifier(),is(new UnrunPipelineRevision("p2").getPipelineIdentifier()));
  assertThat(empty_p3_revision.getStages(),is(new Stages(new NullStage("s1"),new NullStage("s2"),new NullStage("s3"),new NullStage("s4"))));
}
