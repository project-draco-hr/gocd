{
  String pipelineName=UUID.randomUUID().toString();
  String firstStage="firstStage";
  String secondStage="secondStage";
  PipelineConfig pipelineConfig=configHelper.addPipeline(PipelineConfigMother.createPipelineConfigWithStages(pipelineName,firstStage,secondStage));
  Pipeline pipeline=dbHelper.schedulePipeline(pipelineConfig,forceBuild(pipelineConfig),new TimeProvider());
  stageService.addStageStatusListener(new StageStatusListener(){
    @Override public void stageStatusChanged(    Stage stage){
      throw new LinkageError("some nasty linkage error");
    }
  }
);
  JobInstance job=pipeline.getFirstStage().getFirstJob();
  JobIdentifier jobIdentifier=job.getIdentifier();
  scheduleService.jobCompleting(jobIdentifier,JobResult.Passed,job.getAgentUuid());
  scheduleService.updateJobStatus(jobIdentifier,JobState.Completed);
  assertThat(stageService.findLatestStage(pipelineName,secondStage),is(notNullValue()));
}
