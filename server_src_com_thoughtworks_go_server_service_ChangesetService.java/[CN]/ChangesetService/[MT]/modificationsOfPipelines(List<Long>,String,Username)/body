{
  Map<Long,List<ModificationForPipeline>> modificationsForPipelineIds=materialRepository.findModificationsForPipelineIds(pipelineIds);
  PipelineConfigDependencyGraph graph=goConfigService.upstreamDependencyGraphOf(pipelineName);
  Set<String> allMaterialFingerprints=graph.allMaterialFingerprints();
  Set<String> reachableMaterialfingerprints=populateReachableFingerprints(graph,username,true,true);
  FingerprintLoader<ModificationForPipeline> loader=new FingerprintLoader<ModificationForPipeline>(){
    public String getFingerprint(    ModificationForPipeline modificationForPipeline){
      return modificationForPipeline.getMaterialFingerprint();
    }
  }
;
  for (  Map.Entry<Long,List<ModificationForPipeline>> pipelineIdAndModifications : modificationsForPipelineIds.entrySet()) {
    List<ModificationForPipeline> visibleModifications=filterFingerprintHolders(pipelineIdAndModifications.getValue(),reachableMaterialfingerprints,allMaterialFingerprints,loader);
    pipelineIdAndModifications.setValue(visibleModifications);
  }
  return modificationsForPipelineIds;
}
