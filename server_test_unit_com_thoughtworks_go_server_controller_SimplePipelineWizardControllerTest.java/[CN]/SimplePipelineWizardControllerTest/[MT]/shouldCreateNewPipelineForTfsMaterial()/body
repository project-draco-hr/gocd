{
  TfsMaterialConfig tfsMaterialConfig=new TfsMaterialConfig(new GoCipher(),new UrlArgument("http://tfs.com"),"tfsuser","tfsdomain","tfspassword","tfsprojectpath");
  PipelineConfig expected=new PipelineConfig(new CaseInsensitiveString("tfs_pipeline"),new MaterialConfigs(),StageConfigMother.manualStage("tfs_stage"));
  expected.addMaterialConfig(tfsMaterialConfig);
  when(goConfigService.hasPipelineNamed(new CaseInsensitiveString("tfs_pipeline"))).thenReturn(false);
  SecurityContextHelper.setCurrentUser("admin");
  Username admin=new Username(new CaseInsensitiveString("admin"));
  when(securityService.isUserAdmin(admin)).thenReturn(true);
  when(securityService.isUserAdminOfGroup(admin.getUsername(),"group")).thenReturn(true);
  when(materialFactory.getMaterial("tfs","http://tfs.com","tfsuser","tfspassword",null,null,null,"tfsprojectpath","tfsdomain")).thenReturn(tfsMaterialConfig);
  ModelAndView modelAndView=controller.createPipeline(expected.name().toString(),"group","tfs",tfsMaterialConfig.getUrl(),tfsMaterialConfig.getUsername(),tfsMaterialConfig.getPassword(),null,null,null,null,null,null,"","",null,null,null,tfsMaterialConfig.getProjectPath(),tfsMaterialConfig.getDomain(),response);
  assertCreatedPipelineSuccessfully(modelAndView);
  verify(materialFactory).getMaterial("tfs",tfsMaterialConfig.getUrl(),tfsMaterialConfig.getUsername(),tfsMaterialConfig.getPassword(),null,null,null,tfsMaterialConfig.getProjectPath(),tfsMaterialConfig.getDomain());
}
