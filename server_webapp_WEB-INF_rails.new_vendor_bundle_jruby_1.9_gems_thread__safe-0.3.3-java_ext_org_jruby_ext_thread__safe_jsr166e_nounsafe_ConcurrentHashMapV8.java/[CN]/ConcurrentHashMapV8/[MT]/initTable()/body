{
  AtomicReferenceArray<Node> tab;
  int sc;
  while ((tab=table) == null) {
    if ((sc=sizeCtl) < 0)     Thread.yield();
 else     if (SIZE_CTRL_UPDATER.compareAndSet(this,sc,-1)) {
      try {
        if ((tab=table) == null) {
          int n=(sc > 0) ? sc : DEFAULT_CAPACITY;
          tab=table=new AtomicReferenceArray<Node>(n);
          sc=n - (n >>> 2);
        }
      }
  finally {
        sizeCtl=sc;
      }
      break;
    }
  }
  return tab;
}
