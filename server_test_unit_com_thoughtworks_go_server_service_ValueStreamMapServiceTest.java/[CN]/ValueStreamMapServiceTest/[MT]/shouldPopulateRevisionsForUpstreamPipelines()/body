{
  GitMaterial git=new GitMaterial("git");
  MaterialConfig gitConfig=git.config();
  BuildCause p3buildCause=createBuildCause(asList("p1","p2"),new ArrayList<GitMaterial>());
  BuildCause p2buildCause=createBuildCauseForRevisions(asList(dependencyMaterial("p1",2)),asList(git),ModificationsMother.multipleModificationList(0));
  BuildCause p1buildCause=createBuildCause(new ArrayList<String>(),asList(git));
  Modifications modifications=p1buildCause.getMaterialRevisions().getMaterialRevision(0).getModifications();
  when(pipelineService.buildCauseFor("p3",1)).thenReturn(p3buildCause);
  when(pipelineService.buildCauseFor("p2",1)).thenReturn(p2buildCause);
  when(pipelineService.buildCauseFor("p1",1)).thenReturn(p1buildCause);
  when(pipelineService.buildCauseFor("p1",2)).thenReturn(p1buildCause);
  PipelineConfig p1Config=PipelineConfigMother.pipelineConfig("p1",new MaterialConfigs(gitConfig));
  PipelineConfig p2Config=PipelineConfigMother.pipelineConfig("p2",new MaterialConfigs(gitConfig));
  PipelineConfig p3Config=PipelineConfigMother.pipelineConfig("p3",new MaterialConfigs(new DependencyMaterialConfig(p1Config.name(),p1Config.getFirstStageConfig().name()),new DependencyMaterialConfig(p2Config.name(),p2Config.getFirstStageConfig().name())));
  CruiseConfig cruiseConfig=new CruiseConfig(new PipelineConfigs(p1Config,p2Config,p3Config));
  when(pipelineService.findPipelineByCounterOrLabel("p3","1")).thenReturn(new Pipeline("p3","LABEL-P3",p3buildCause));
  when(goConfigService.currentCruiseConfig()).thenReturn(cruiseConfig);
  ValueStreamMapPresentationModel graph=valueStreamMapService.getValueStreamMap("p3",1,user,result);
  VSMTestHelper.assertNodeHasRevisions(graph,"p1",new PipelineRevision("p1",1,"LABEL-p1-1"),new PipelineRevision("p1",2,"LABEL-p1-2"));
  VSMTestHelper.assertNodeHasRevisions(graph,"p2",new PipelineRevision("p2",1,"LABEL-p2-1"));
  VSMTestHelper.assertNodeHasRevisions(graph,"p3",new PipelineRevision("p3",1,"LABEL-P3"));
  VSMTestHelper.assertNodeHasRevisions(graph,git.getFingerprint(),new SCMRevision(modifications.get(2)),new SCMRevision(modifications.get(1)),new SCMRevision(modifications.get(0)));
  verify(runStagesPopulator).apply(any(ValueStreamMap.class));
}
