{
  List<PipelineConfig> visited=new ArrayList<>();
  HashMap<CaseInsensitiveString,Set<String>> duplicates=new HashMap<>();
  for (  PipelineConfigs group : this) {
    for (    PipelineConfig pipeline : group) {
      for (      PipelineConfig visitedPipeline : visited) {
        if (visitedPipeline.name().equals(pipeline.name())) {
          if (!duplicates.containsKey(pipeline.name())) {
            duplicates.put(pipeline.name(),new HashSet<String>());
          }
          duplicates.get(pipeline.name()).add(pipeline.getOriginDisplayName());
          duplicates.get(pipeline.name()).add(visitedPipeline.getOriginDisplayName());
          pipeline.errors().remove(PipelineConfig.NAME);
          pipeline.addError(PipelineConfig.NAME,String.format("You have defined multiple pipelines named '%s'. Pipeline names must be unique. Source(s): %s",pipeline.name(),duplicates.get(pipeline.name())));
          visitedPipeline.errors().remove(PipelineConfig.NAME);
          visitedPipeline.addError(PipelineConfig.NAME,String.format("You have defined multiple pipelines named '%s'. Pipeline names must be unique. Source(s): %s",pipeline.name(),duplicates.get(pipeline.name())));
        }
      }
      visited.add(pipeline);
    }
  }
}
