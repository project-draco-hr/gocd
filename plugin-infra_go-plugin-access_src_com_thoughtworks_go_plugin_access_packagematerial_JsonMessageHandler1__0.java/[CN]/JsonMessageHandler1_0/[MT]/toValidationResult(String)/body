{
  try {
    ValidationResult validationResult=new ValidationResult();
    if (isEmpty(responseBody))     return validationResult;
    List errors;
    try {
      errors=parseResponseToList(responseBody);
    }
 catch (    Exception e) {
      throw new RuntimeException("Validation errors should be returned as list or errors, with  each error represented as a map");
    }
    for (    Object item : errors) {
      if (!(item instanceof Map)) {
        throw new RuntimeException("Each validation error should be represented as a map");
      }
      Map error=(Map)item;
      String key;
      try {
        key=(String)error.get("key");
      }
 catch (      Exception e) {
        throw new RuntimeException("Validation error key should be of type string");
      }
      String message;
      try {
        message=(String)error.get("message");
      }
 catch (      Exception e) {
        throw new RuntimeException("Validation message should be of type string");
      }
      if (isEmpty(key)) {
        validationResult.addError(new ValidationError(message));
      }
 else {
        validationResult.addError(new ValidationError(key,message));
      }
    }
    return validationResult;
  }
 catch (  Exception e) {
    throw new RuntimeException(format("Unable to de-serialize json response. %s",e.getMessage()));
  }
}
