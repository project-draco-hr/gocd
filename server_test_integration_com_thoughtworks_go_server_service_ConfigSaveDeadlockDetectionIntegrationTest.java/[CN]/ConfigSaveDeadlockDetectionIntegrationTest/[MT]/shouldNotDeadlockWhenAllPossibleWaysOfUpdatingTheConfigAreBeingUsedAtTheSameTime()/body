{
  final ArrayList<Thread> group1=new ArrayList<>();
  final ArrayList<Thread> group2=new ArrayList<>();
  final ArrayList<Thread> group3=new ArrayList<>();
  final ArrayList<Thread> group4=new ArrayList<>();
  int count=100;
  final int pipelineCreatedThroughApiCount=count;
  final int pipelineCreatedThroughUICount=count;
  final int configRepoAdditionThreadCount=count;
  final int configRepoDeletionThreadCount=count;
  for (int i=0; i < pipelineCreatedThroughUICount; i++) {
    Thread thread=configSaveThread(i);
    group1.add(thread);
  }
  for (int i=0; i < pipelineCreatedThroughApiCount; i++) {
    Thread thread=pipelineSaveThread(i);
    group2.add(thread);
  }
  ConfigReposConfig configRepos=new ConfigReposConfig();
  for (int i=0; i < configRepoAdditionThreadCount; i++) {
    ConfigRepoConfig configRepoConfig=new ConfigRepoConfig(new GitMaterialConfig("url" + i),"plugin");
    configRepos.add(configRepoConfig);
    Thread thread=configRepoSaveThread(configRepoConfig,i);
    group3.add(thread);
  }
  for (int i=0; i < configRepoDeletionThreadCount; i++) {
    ConfigRepoConfig configRepoConfig=new ConfigRepoConfig(new GitMaterialConfig("to-be-deleted-url" + i),"plugin");
    cachedGoPartials.addOrUpdate(configRepoConfig.getMaterialConfig().getFingerprint(),PartialConfigMother.withPipeline("to-be-deleted" + i,new RepoConfigOrigin(configRepoConfig,"plugin")));
    configRepos.add(configRepoConfig);
    Thread thread=configRepoDeleteThread(configRepoConfig,i);
    group4.add(thread);
  }
  configHelper.setConfigRepos(configRepos);
  for (int i=0; i < count; i++) {
    Thread timerThread=null;
    try {
      timerThread=createThread(new Runnable(){
        @Override public void run(){
          try {
            writeConfigToFile(new File(goConfigDao.fileLocation()));
          }
 catch (          Exception e) {
            e.printStackTrace();
            fail("Failed with error: " + e.getMessage());
          }
          cachedGoConfig.forceReload();
        }
      }
,"timer-thread");
    }
 catch (    InterruptedException e) {
      fail(e.getMessage());
    }
    try {
      group1.get(i).start();
      group2.get(i).start();
      group3.get(i).start();
      group4.get(i).start();
      timerThread.start();
      group1.get(i).join();
      group2.get(i).join();
      group3.get(i).join();
      group4.get(i).join();
      timerThread.join();
    }
 catch (    InterruptedException e) {
      fail(e.getMessage());
    }
  }
  assertThat(goConfigService.getAllPipelineConfigs().size(),is(pipelineCreatedThroughApiCount + pipelineCreatedThroughUICount + configRepoAdditionThreadCount));
  assertThat(goConfigService.getConfigForEditing().getAllPipelineConfigs().size(),is(pipelineCreatedThroughApiCount + pipelineCreatedThroughUICount));
}
