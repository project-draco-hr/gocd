{
  Date timestamp=new Date();
  Map<String,String> data=new HashMap<String,String>();
  String dataKey="extra_data";
  String dataValue="value";
  data.put(dataKey,dataValue);
  List<ModifiedFile> modifiedFiles=new ArrayList<ModifiedFile>(asList(new ModifiedFile("f1",ModifiedAction.added),new ModifiedFile("f2",ModifiedAction.modified),new ModifiedFile("f3",ModifiedAction.deleted)));
  SCMRevision scmRevision=new SCMRevision("revision-123",timestamp,"user","comment",data,modifiedFiles);
  when(scmExtension.getLatestRevision(eq(material.getPluginId()),scmConfiguration.capture(),eq(flyweightFolderPath))).thenReturn(scmRevision);
  List<Modification> modifications=poller.latestModification(material,new File(flyweightFolderPath),null);
  assertThat(modifications.get(0).getRevision(),is("revision-123"));
  assertThat(modifications.get(0).getModifiedTime(),is(timestamp));
  assertThat(modifications.get(0).getUserName(),is("user"));
  assertThat(modifications.get(0).getComment(),is("comment"));
  assertThat(modifications.get(0).getAdditionalData(),is(JsonHelper.toJsonString(data)));
  assertThat(modifications.get(0).getModifiedFiles().size(),is(3));
  com.thoughtworks.go.domain.materials.ModifiedFile f1=new com.thoughtworks.go.domain.materials.ModifiedFile("f1",null,com.thoughtworks.go.domain.materials.ModifiedAction.added);
  com.thoughtworks.go.domain.materials.ModifiedFile f2=new com.thoughtworks.go.domain.materials.ModifiedFile("f2",null,com.thoughtworks.go.domain.materials.ModifiedAction.modified);
  com.thoughtworks.go.domain.materials.ModifiedFile f3=new com.thoughtworks.go.domain.materials.ModifiedFile("f3",null,com.thoughtworks.go.domain.materials.ModifiedAction.deleted);
  assertThat(new HashSet(modifications.get(0).getModifiedFiles()),is(new HashSet(asList(f1,f2,f3))));
  assertConfiguration(scmConfiguration.getValue(),material.getScmConfig().getConfiguration());
}
