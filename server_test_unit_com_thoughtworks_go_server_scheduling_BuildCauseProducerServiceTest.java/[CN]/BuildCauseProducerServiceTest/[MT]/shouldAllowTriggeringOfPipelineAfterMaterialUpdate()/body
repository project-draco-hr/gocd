{
  HgMaterial hgMaterial=new HgMaterial("url",null);
  HgMaterialConfig hgMaterialConfig=new HgMaterialConfig("url",null);
  pipelineConfig.addMaterialConfig(hgMaterialConfig);
  when(materialConfigConverter.toMaterial(hgMaterialConfig)).thenReturn(hgMaterial);
  when(specificMaterialRevisionFactory.create("pipeline",new HashMap<String,String>())).thenReturn(new MaterialRevisions());
  when(pipelineScheduleQueue.mostRecentScheduled(CaseInsensitiveString.str(pipelineConfig.name()))).thenReturn(BuildCause.createNeverRun());
  when(materialRepository.findLatestModification(hgMaterial)).thenReturn(new MaterialRevisions(new MaterialRevision(hgMaterial,new ArrayList<Modification>())));
  buildCauseProducerService.manualSchedulePipeline(Username.ANONYMOUS,pipelineConfig.name(),new ScheduleOptions(),new ServerHealthStateOperationResult());
  assertThat(triggerMonitor.isAlreadyTriggered(CaseInsensitiveString.str(pipelineConfig.name())),is(true));
  sendMaterialUpdateCompleteMessage(extractMaterialListenerInstanceFromRegisterCall(),hgMaterial);
  assertThat(triggerMonitor.isAlreadyTriggered(CaseInsensitiveString.str(pipelineConfig.name())),is(false));
}
