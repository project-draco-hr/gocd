{
  InMemoryStreamConsumer outputStreamConsumer=inMemoryConsumer();
  GitSubmoduleRepos submoduleRepos=new GitSubmoduleRepos();
  String submoduleDirectoryName="local-submodule";
  File cloneDirectory=createTempWorkingDirectory();
  File remoteSubmoduleLocation=submoduleRepos.addSubmodule(SUBMODULE,submoduleDirectoryName);
  GitCommand clonedCopy=new GitCommand(null,cloneDirectory,GitMaterialConfig.DEFAULT_BRANCH,false,new HashMap<String,String>());
  clonedCopy.clone(outputStreamConsumer,submoduleRepos.mainRepo().getUrl());
  clonedCopy.resetWorkingDir(outputStreamConsumer,new StringRevision("HEAD"));
  File fileInSubmodule=allFilesIn(new File(cloneDirectory,submoduleDirectoryName),"file-").get(0);
  FileUtils.writeStringToFile(fileInSubmodule,"Some other new content.");
  List<Modification> modifications=submoduleRepos.modifyOneFileInSubmoduleAndUpdateMainRepo(remoteSubmoduleLocation,submoduleDirectoryName,fileInSubmodule.getName(),"NEW CONTENT OF FILE");
  clonedCopy.fetch(outputStreamConsumer);
  clonedCopy.resetWorkingDir(outputStreamConsumer,new StringRevision(modifications.get(0).getRevision()));
  assertThat(FileUtils.readFileToString(fileInSubmodule),is("NEW CONTENT OF FILE"));
}
