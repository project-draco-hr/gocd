{
  TreeMap<Long,Map<String,Object>> traces=new TreeMap<>();
  ThreadInfo[] threadInfos=threadMXBean.dumpAllThreads(true,true);
  for (  ThreadInfo threadInfo : threadInfos) {
    LinkedHashMap<String,Object> threadStackTrace=new LinkedHashMap<>();
    threadStackTrace.put("Id",threadInfo.getThreadId());
    threadStackTrace.put("Name",threadInfo.getThreadName());
    threadStackTrace.put("State",threadInfo.getThreadState());
    LinkedHashMap<String,Object> lockMonitorInfo=new LinkedHashMap<>();
    lockMonitorInfo.put("Locked Monitors",mapToString(threadInfo.getLockedMonitors()));
    lockMonitorInfo.put("Locked Synchronizers",mapToString(threadInfo.getLockedSynchronizers()));
    threadStackTrace.put("Lock Monitor Info",lockMonitorInfo);
    LinkedHashMap<String,Object> blockedInfo=new LinkedHashMap<>();
    blockedInfo.put("Blocked Time",threadInfo.getBlockedTime() == -1 ? null : threadInfo.getBlockedTime());
    blockedInfo.put("Blocked Count",threadInfo.getBlockedCount());
    threadStackTrace.put("Blocked Info",blockedInfo);
    LinkedHashMap<String,Object> timeInfo=new LinkedHashMap<>();
    timeInfo.put("Waited Time",threadInfo.getWaitedTime() == -1 ? null : threadInfo.getWaitedTime());
    timeInfo.put("Waited Count",threadInfo.getWaitedCount());
    threadStackTrace.put("Time Info",timeInfo);
    LinkedHashMap<String,Object> lockInfoMap=new LinkedHashMap<>();
    LinkedHashMap<String,Object> lockedOn=new LinkedHashMap<>();
    LockInfo lockInfo=threadInfo.getLockInfo();
    if (lockInfo != null) {
      lockedOn.put("Class",lockInfo.getClassName());
      lockedOn.put("Hashcode",lockInfo.getIdentityHashCode());
    }
    lockInfoMap.put("Locked On",lockedOn);
    lockInfoMap.put("Lock Owner Thread Id",threadInfo.getLockOwnerId() == -1 ? null : threadInfo.getLockOwnerId());
    lockInfoMap.put("Lock Owner Thread Name",threadInfo.getLockOwnerName());
    threadStackTrace.put("Lock Info",lockInfoMap);
    LinkedHashMap<String,Object> stateInfo=new LinkedHashMap<>();
    stateInfo.put("Suspended",threadInfo.isSuspended());
    stateInfo.put("InNative",threadInfo.isInNative());
    threadStackTrace.put("State Info",stateInfo);
    StackTraceElement[] stackTrace=threadInfo.getStackTrace();
    ArrayList<String> strings=mapToString(stackTrace);
    threadStackTrace.put("Stack Trace",strings);
    traces.put(threadInfo.getThreadId(),threadStackTrace);
  }
  return traces;
}
