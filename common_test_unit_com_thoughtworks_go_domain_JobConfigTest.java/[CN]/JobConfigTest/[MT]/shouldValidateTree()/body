{
  Resources resources=mock(Resources.class);
  when(resources.iterator()).thenReturn(new Resources().iterator());
  ArtifactPlans artifactPlans=mock(ArtifactPlans.class);
  ArtifactPropertiesGenerators properties=mock(ArtifactPropertiesGenerators.class);
  Tasks tasks=mock(Tasks.class);
  Tabs tabs=mock(Tabs.class);
  EnvironmentVariablesConfig variables=mock(EnvironmentVariablesConfig.class);
  when(tasks.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  when(resources.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  when(properties.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  when(artifactPlans.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  when(tabs.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  when(variables.validateTree(Matchers.<PipelineConfigSaveValidationContext>any())).thenReturn(true);
  JobConfig jobConfig=new JobConfig(new CaseInsensitiveString("job"),resources,artifactPlans,tasks);
  jobConfig.setTabs(tabs);
  jobConfig.setProperties(properties);
  jobConfig.setVariables(variables);
  PipelineConfigSaveValidationContext context=PipelineConfigSaveValidationContext.forChain(true,"group",new PipelineConfig(),new StageConfig(),jobConfig);
  assertThat(jobConfig.validateTree(context),is(true));
  ArgumentCaptor<PipelineConfigSaveValidationContext> captor=ArgumentCaptor.forClass(PipelineConfigSaveValidationContext.class);
  verify(tasks).validateTree(captor.capture());
  PipelineConfigSaveValidationContext childContext=captor.getValue();
  assertThat((JobConfig)childContext.getParent(),is(jobConfig));
  verify(resources).validateTree(childContext);
  verify(properties).validateTree(childContext);
  verify(artifactPlans).validateTree(childContext);
  verify(tabs).validateTree(childContext);
  verify(variables).validateTree(childContext);
}
