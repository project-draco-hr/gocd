{
  String pipelineOneFromConfigRepo="pipeline_one_from_config_repo";
  String invalidPartial="invalidPartial";
  final String pipelineInMain="pipeline_in_main";
  PartialConfig validPartialConfig=PartialConfigMother.withPipeline(pipelineOneFromConfigRepo,new RepoConfigOrigin(repoConfig,"1"));
  PartialConfig invalidPartialConfig=PartialConfigMother.invalidPartial(invalidPartial,new RepoConfigOrigin(repoConfig,"2"));
  cachedGoPartials.addOrUpdate(repoConfig.getMaterialConfig().getFingerprint(),validPartialConfig);
  cachedGoPartials.markAllKnownAsValid();
  cachedGoPartials.addOrUpdate(repoConfig.getMaterialConfig().getFingerprint(),invalidPartialConfig);
  GoFileConfigDataSource.GoConfigSaveResult result=dataSource.writeWithLock(new UpdateConfigCommand(){
    @Override public CruiseConfig update(    CruiseConfig cruiseConfig) throws Exception {
      cruiseConfig.addPipeline("default",PipelineConfigMother.createPipelineConfig(pipelineInMain,"stage","job"));
      return cruiseConfig;
    }
  }
,new GoConfigHolder(configHelper.currentConfig(),configHelper.currentConfig()));
  assertThat(result.getConfigHolder().config.getAllPipelineNames().contains(new CaseInsensitiveString(invalidPartial)),is(false));
  assertThat(result.getConfigHolder().config.getAllPipelineNames().contains(new CaseInsensitiveString(pipelineOneFromConfigRepo)),is(true));
  assertThat(result.getConfigHolder().config.getAllPipelineNames().contains(new CaseInsensitiveString(pipelineInMain)),is(true));
  assertThat(cachedGoPartials.lastValidPartials().size(),is(1));
  PartialConfig partialConfig=cachedGoPartials.lastValidPartials().get(0);
  assertThat(partialConfig.getGroups(),is(validPartialConfig.getGroups()));
  assertThat(partialConfig.getEnvironments(),is(validPartialConfig.getEnvironments()));
  assertThat(partialConfig.getOrigin(),is(validPartialConfig.getOrigin()));
}
