{
  pipelineDao=new PipelineSqlMapDao(null,null,goCache,null,transactionTemplate,sqlMapClient,transactionSynchronizationManager,systemEnvironment,configFileDao,databaseStrategy){
    @Override public StageIdentifier lockedPipeline(    String pipelineName){
      StageIdentifier result=super.lockedPipeline(pipelineName);
      TestUtils.sleepQuietly(20);
      return result;
    }
  }
;
  List<Thread> threads=new ArrayList<Thread>();
  final int[] errors=new int[1];
  for (int i=0; i < 10; i++) {
    JobInstances jobInstances=new JobInstances(JobInstanceMother.completed("job"));
    Stage stage=new Stage("stage-1",jobInstances,"shilpa","auto",new TimeProvider());
    final Pipeline pipeline=PipelineMother.pipeline("mingle",stage);
    pipeline.setCounter(i + 1);
    dbHelper.savePipelineWithStagesAndMaterials(pipeline);
    Thread thread=new Thread(new Runnable(){
      public void run(){
        try {
          pipelineDao.lockPipeline(pipeline);
        }
 catch (        Exception e) {
          errors[0]++;
        }
      }
    }
,"thread-" + i);
    threads.add(thread);
    thread.start();
  }
  for (  Thread thread : threads) {
    thread.join();
  }
  assertThat(errors[0],is(9));
}
